[{"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\index.js":"1","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\App.js":"2","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\MyPrinters.js":"4","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\myDesigneInfo\\DesignInfo.js":"5","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Homepage\\Homepage.js":"6","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Mydesignes\\mydesignes.js":"7","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\metamaskLogin\\metamaskLogin.js":"8","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\PrinterDetails\\PrinterDetails.js":"9","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\ModifyPrinters.js":"10","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\LoadPrinter\\LoadPrinter.js":"11","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\Modify.js":"12","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Materials\\AddMaterials.js":"13","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\signin\\SignIn.js":"14","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MountMaterial\\MountMaterial.js":"15","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\UpdateMaterial\\UpdateMaterial.js":"16","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MyMaterials\\MyMaterials.js":"17","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\WalletCheck\\WalletConnected.js":"18","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\design\\design.js":"19","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\Navbar\\homeNav.js":"20","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\data\\data.js":"21","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\STLviewer\\Stl.js":"22","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\OnBoarding\\OnBoarding.js":"23","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Users\\Users.js":"24","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Web3.js":"25","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\ipfs.js":"26","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\AddDesign.js":"27","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\VotingSystem\\VotingSystem.js":"28","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\StlRenderer.js":"29","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\UploadStl.js":"30"},{"size":1611,"mtime":1652803732137,"results":"31","hashOfConfig":"32"},{"size":3480,"mtime":1655400068700,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1652803732137,"results":"34","hashOfConfig":"32"},{"size":3823,"mtime":1656511433720,"results":"35","hashOfConfig":"32"},{"size":1902,"mtime":1655627489176,"results":"36","hashOfConfig":"32"},{"size":1547,"mtime":1652803731926,"results":"37","hashOfConfig":"32"},{"size":4288,"mtime":1656340929101,"results":"38","hashOfConfig":"32"},{"size":2438,"mtime":1652803731941,"results":"39","hashOfConfig":"32"},{"size":1452,"mtime":1652803731941,"results":"40","hashOfConfig":"32"},{"size":1838,"mtime":1652951710267,"results":"41","hashOfConfig":"32"},{"size":8643,"mtime":1653556736351,"results":"42","hashOfConfig":"32"},{"size":5083,"mtime":1656511230215,"results":"43","hashOfConfig":"32"},{"size":4416,"mtime":1653920003007,"results":"44","hashOfConfig":"32"},{"size":4720,"mtime":1653386614699,"results":"45","hashOfConfig":"32"},{"size":2026,"mtime":1656164673528,"results":"46","hashOfConfig":"32"},{"size":4223,"mtime":1656061490237,"results":"47","hashOfConfig":"32"},{"size":3395,"mtime":1656340729126,"results":"48","hashOfConfig":"32"},{"size":2314,"mtime":1652803731941,"results":"49","hashOfConfig":"32"},{"size":2105,"mtime":1652803731941,"results":"50","hashOfConfig":"32"},{"size":2092,"mtime":1654765596589,"results":"51","hashOfConfig":"32"},{"size":2532,"mtime":1655452667466,"results":"52","hashOfConfig":"32"},{"size":333,"mtime":1652803731941,"results":"53","hashOfConfig":"32"},{"size":5198,"mtime":1656511636587,"results":"54","hashOfConfig":"32"},{"size":2240,"mtime":1652803731941,"results":"55","hashOfConfig":"32"},{"size":687,"mtime":1652803731941,"results":"56","hashOfConfig":"32"},{"size":137,"mtime":1654011310989,"results":"57","hashOfConfig":"32"},{"size":2722,"mtime":1655282256718,"results":"58","hashOfConfig":"32"},{"size":1951,"mtime":1655627452524,"results":"59","hashOfConfig":"32"},{"size":802,"mtime":1655281899828,"results":"60","hashOfConfig":"32"},{"size":1454,"mtime":1655027939814,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"pjt84g",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"64"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"64"},"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\index.js",[],["141","142"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\App.js",["143"],"//import User from './SmartContracts/Users/Users';\r\n//import { ethers } from \"ethers\";\r\nimport './App.css';\r\nimport Homepage from './Pages/Homepage/Homepage';\r\nimport {BrowserRouter,Route,Routes, useParams} from \"react-router-dom\";\r\nimport MyDesignes from './Pages/Mydesignes/mydesignes';\r\nimport DesignInfo from './Pages/myDesigneInfo/DesignInfo';\r\nimport MyPrinters from './Pages/Myprinters/MyPrinters';\r\nimport MetamaskLogin from './Pages/metamaskLogin/metamaskLogin';\r\nimport PrinterDetails from './Pages/Myprinters/PrinterDetails/PrinterDetails'\r\nimport SignIn from './Pages/signin/SignIn';\r\nimport WalletConnected from './component/WalletCheck/WalletConnected';\r\nimport LoadPrinter from './Pages/LoadPrinter/LoadPrinter';\r\nimport ModifyPrinters from './Pages/Myprinters/ModifyPrinters/ModifyPrinters';\r\nimport Modify from './Pages/Myprinters/ModifyPrinters/Modify';\r\nimport AddMaterials from \"./Pages/Materials/AddMaterials\"\r\nimport MyMaterials from './Pages/MyMaterials/MyMaterials';\r\nimport MountMaterial from './Pages/MountMaterial/MountMaterial';\r\nimport UpdateMaterial from './Pages/UpdateMaterial/UpdateMaterial';\r\nimport AddDesign from './Pages/AddDesign/AddDesign';\r\n\r\n\r\n\r\n\r\n/*export const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42, 56, 97,1337] });\r\n\r\n export function WalletConnected(){\r\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React()\r\n  const [loaded, setLoaded] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    injected\r\n      .isAuthorized()\r\n      .then((isAuthorized) => {\r\n        setLoaded(true)\r\n        if (isAuthorized && !networkActive && !networkError) {\r\n          activateNetwork(injected)\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoaded(true)\r\n      })\r\n  }, [activateNetwork, networkActive, networkError])\r\n\r\n  if(loaded && networkActive)\r\n    return <Outlet></Outlet>\r\n  else if(loaded && !networkActive)\r\n    return <Navigate to=\"login\"></Navigate>\r\n  else \r\n    return <span>Loading</span>\r\n\r\n\r\n}*/\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return(\r\n\r\n    <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<Homepage/>}></Route>\r\n      <Route path=\"/login\" element={<MetamaskLogin/>}></Route>\r\n      <Route path=\"/signin\" element={<SignIn/>}></Route>\r\n\r\n      \r\n          <Route path=\"myprinters\"element={<WalletConnected>    <MyPrinters/>  </WalletConnected>   }/>\r\n          <Route path='myprinters/:printerDetails' element={<WalletConnected> <PrinterDetails/> </WalletConnected> }/>\r\n          <Route path=\"mydesignes\" element={<WalletConnected>   <MyDesignes/>   </WalletConnected> }/>\r\n          <Route path=\"mydesignes/:designInfo\" element={ <WalletConnected> <DesignInfo/> </WalletConnected> }/>\r\n          <Route path=\"addprinter\" element={<LoadPrinter/>}/>\r\n          <Route path=\"ModifyPrinters\" element={<ModifyPrinters/>}/>\r\n          <Route path=\"myprinters/Modify/:id\" element={<Modify/>}/>\r\n          <Route path=\"AddMaterials\" element={<AddMaterials op=\"Add\" />}/>\r\n          <Route path=\"MyMaterials\" element={<MyMaterials/>}/>\r\n          <Route path =\"myprinters/Modify/:id/MountMaterial\" element={<MountMaterial/>}/>\r\n          <Route path=\"UpdateMaterial/:id\" element={<UpdateMaterial />}/>\r\n          <Route path=\"AddDesign\" element={<AddDesign/>}/>\r\n          {/*<Route path=\"MyMaterials/UpdateMaterial/:id\" element={<UpdateMaterial/>}/>*/}\r\n\r\n    </Routes>\r\n    </BrowserRouter>\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\MyPrinters.js",["144","145","146","147","148","149","150","151"],"import { UserNav } from \"../../component/Navbar/homeNav\"\r\nimport './Myprinters.css'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\r\nimport Web3 from \"web3\"\r\n\r\nexport default function MyPrinters(){\r\n\r\n    const [printers,setPrinters] = useState([])\r\n    const navigate=useNavigate();\r\n    const[printerName,SetPrinterName] = useState();\r\n    const[printerTemp,setPrinterTemp] = useState();  \r\n    const [PrintersList,SetPrintersList] = useState([]); \r\n\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter();\r\n        setPrinters(printer)\r\n        return printer[0];\r\n    }\r\n\r\n    useEffect(()=>{\r\n      //  console.log(LoadPrinterMaker())\r\n    },[])\r\n\r\n\r\n    let result = \"ciao\";\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getPrinters(){\r\n            const onboarding = new OnBoarding();\r\n            const web3 = new Web3()\r\n            var printer = await onboarding.getPrinters();\r\n            console.log(\"ciao\")\r\n            console.log(printer.soluble)\r\n           result= printer.map((value,key)=>{\r\n               console.log(value.soluble)\r\n               console.log(value.foodSafety)\r\n            const handleSubmit = async(event)=>{\r\n                event.preventDefault();\r\n                const onboarding = new OnBoarding();\r\n                await onboarding.RemovePrinter(key)\r\n                window.location.reload()\r\n            }\r\n\r\n                \r\n                return (<tr key={key}>\r\n                            <td key={value.name} >{web3.utils.toUtf8(value.name)}</td>\r\n                            <td key={value.mountedNozzles+\"Nozzles\"}>{value.mountedNozzles}</td>\r\n                            <td key={value.soluble+ \"Solub\"}>{value.soluble.toString()}</td>\r\n                            <td key={value.soluble+\"foodSafety\"}>{value.foodSafety.toString()}</td>\r\n                            <td><button className=\"next1\" onClick={()=>navigate(`/myprinters/Modify/${key}`)}>Modify</button></td>\r\n                            <td><button className=\"next1\" onClick={handleSubmit}>Remove Printer</button></td>\r\n                </tr>)\r\n            })\r\n            /*const PrintersList = printer.map(printer=>{\r\n                <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n           })*/\r\n           console.log(result)\r\n           SetPrintersList(result);\r\n        }\r\n        getPrinters();\r\n        },[])\r\n\r\n    return(\r\n        <div>\r\n             <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>My printers</h1>\r\n            \r\n            <table className=\"myPrinters\">\r\n                \r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>NozzlesMounted</th>\r\n                    <th>Soluble</th>\r\n                    <th>foodSafety</th>\r\n                    <th>Modify</th>\r\n                    <th>Remove</th>\r\n                </tr>     \r\n            {PrintersList}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        <div className='SignIn' style={{border:'0px'}}>\r\n        <button className='next1' onClick={()=>navigate('/addprinter')}>Add Printer</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\myDesigneInfo\\DesignInfo.js",["152","153"],"import { getDesigne } from \"../../data/data\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserNav } from \"../../component/Navbar/homeNav\";\r\nimport './DesignInfo.css'\r\nimport StlRenderer from \"../AddDesign/StlRenderer\";\r\nexport default function DesignInfo(){\r\n    let param = useParams();\r\n    \r\n    let design=getDesigne(param.designInfo)\r\n    console.log(design.fileNamename)\r\n\r\n    const startPrint=async()=>{\r\n    let address=\"\";\r\n    if (design.fileName===\"Cube_3d.stl\")\r\n        address=\"http://192.168.8.230\";\r\n    else address=\"http://192.168.8.240\";\r\n        window.location = address;\r\n        \r\n\r\n        /*await fetch('IP_ADDRESS/printer/start',{\r\n            method:'POST',\r\n            body:{\r\n                'design':''\r\n            },\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const result=await startPrint.json();\r\n        return result;*/\r\n    }\r\n\r\n\r\n\r\n    function importAll(r,stlFileName) {\r\n        let designes = {};\r\n        r.keys().map((item, index) => { designes[item.replace('./', '')] = r(item); });       \r\n        for(const [key,value] of Object.entries(designes)){\r\n            console.log(key)\r\n            if(key===stlFileName)\r\n                return designes[key].default;\r\n        }\r\n    }\r\n    const design_path=importAll(require.context('../../images/stlFiles/',false,/\\.stl$/),design.fileName);\r\n    \r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n            <div className=\"stl_render\">\r\n                <h1>{design.name}</h1>\r\n                <StlRenderer file={design_path} />\r\n                <div className=\"designInfo\">                    \r\n                    <p>{design.info}</p>\r\n                    <button className=\"printButton\" onClick={startPrint}>Stampa</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Homepage\\Homepage.js",["154"],"//import { Outlet } from 'react-router-dom';\r\nimport './Homepage.css';\r\n//import { ethers } from \"ethers\";\r\nimport { HomeNav, MakerNav } from '../../component/Navbar/homeNav';\r\nimport { UserNav } from '../../component/Navbar/homeNav';\r\nimport {  useEffect, useState } from 'react';\r\nimport Design from '../design/design';\r\nimport User from '../../SmartContracts/Users/Users';\r\n//import User from './SmartContracts/Users/Users';\r\n\r\nfunction Homepage() {\r\n  //let nav=null;\r\n  const [loaded,setLoaded]=useState(false);\r\n  const [nav,setNav]=useState();\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    const accountCheck=async()=>{\r\n      let user=new User();\r\n      const {ethereum}=window;\r\n      await ethereum.request({ method: 'eth_accounts' })\r\n        .then((res)=>{\r\n          if(res.length>0){\r\n            user.isUser()\r\n              .then((res)=>{\r\n                if(res){\r\n                  setLoaded(true);\r\n                  setNav(<UserNav/>);\r\n                }\r\n                else {\r\n                  setLoaded(true);\r\n                  setNav(<HomeNav/>);\r\n                }\r\n                })\r\n              .catch(()=>{setLoaded(true)\r\n              setNav(<HomeNav/>)})\r\n          }\r\n         else{\r\n           setLoaded(true);\r\n          setNav(<HomeNav/>);\r\n        }\r\n        })};\r\n    accountCheck();\r\n  },[loaded])\r\n\r\n  if(loaded){\r\n  return (\r\n    <div>\r\n      {nav}\r\n      <div className='login'>\r\n      </div>\r\n       <Design/>\r\n    </div>\r\n  );}\r\n  else return (<span>Loading</span>)\r\n}\r\n\r\nexport default Homepage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Mydesignes\\mydesignes.js",["155","156","157","158","159","160","161"],"import '../design/design.css'\r\nimport cube from '../../images/cube-1.png'\r\nimport cilindro from '../../images/cilindro.png'\r\nimport coniglio from '../../images/Bunny.png'\r\nimport portachiavi from '../../images/portachiavi.png'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport metamask from '../../images/metamsak.png'\r\n//import { useNavigate } from 'react-router-dom'\r\nimport './myDesignes.css'\r\nimport VotingSystem from '../../SmartContracts/VotingSystem/VotingSystem'\r\nimport { useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function MyDesignes(){\r\n\r\n    const [design,Setdesign] = useState([]);\r\n    const [designList,SetDesignList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    let result =\"prova\"\r\n\r\n    useEffect(()=>{\r\n        async function getDesign(){\r\n            const votin = new VotingSystem()\r\n            let web3 = new Web3();\r\n            var des = await votin.getDesigns();\r\n            console.log(des);\r\n            Setdesign(des);\r\n             result = des.map((value,key)=>{\r\n                return(\r\n                        <div className='designModel' key={key}>\r\n                            <img  className=\"cube\"alt=\"\" src={portachiavi}/>\r\n                            <h3>**NAME OF DESIGN**</h3>\r\n                            <button className='next1' onClick={()=>navigate(`/mydesignes/Portachiavi`)} >See Details</button>          \r\n                            </div>\r\n                )\r\n            })\r\n            SetDesignList(result)\r\n        }\r\n        getDesign();\r\n    },[])\r\n\r\n    return(\r\n        <div className='designesList'>\r\n        <UserNav/>\r\n        <h1>My designes</h1>\r\n            <div className=\"flexDesignes\">\r\n\r\n\r\n            <div className='provaFun'>\r\n                    {designList}\r\n            </div>\r\n\r\n            <div className='provaFun'>\r\n                <a href=\"mydesignes/Portachiavi\">\r\n                    <div className='designModel'>\r\n                        <img  className=\"cube\"alt=\"\" src={portachiavi}/>\r\n                        <h3>Portachiavi Unime</h3>\r\n                        <p>Questo è un design di test per la stampa 3D di un portachiavi</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n     \r\n\r\n{/*           \r\n            <div className='provaFun'>\r\n                <a href=\"mydesignes/Portachiavi\">\r\n                    <div className='designModel'>\r\n                        <img  className=\"cube\"alt=\"\" src={portachiavi}/>\r\n                        <h3>Portachiavi Unime</h3>\r\n                        <p>Questo è un design di test per la stampa 3D di un portachiavi</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n     \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                <div className='provaFun'>\r\n                   \r\n                    <a href=\"mydesignes/cubo\">\r\n                    <div className='designModel'>\r\n                        <img className='cube' alt=\"\" src={cube}/>\r\n                        <h3>Cubo</h3>\r\n                        <p>Questo è un design di test per la stampa 3D di un cubo</p>\r\n                    </div>\r\n                    </a>\r\n                </div>\r\n\r\n\r\n                <div className='provaFun'>\r\n                <a href=\"mydesignes/Bunny\">\r\n                    <div className='designModel'>\r\n                        <img  className=\"cube\"alt=\"\" src={coniglio}/>\r\n                        <h3>Coniglio</h3>\r\n                        <p>Questo è un design di test per la stampa 3D di un coniglio</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <div className='provaFun'>\r\n                <a href=\"mydesignes/cilindro\">\r\n                    <div className='designModel'>\r\n                        <img  className=\"cube\"alt=\"\" src={cilindro}/>\r\n                        <h3>Cilindro</h3>\r\n                        <p>Questo è un design di test per la stampa 3D di un cilindro</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n\r\n    */}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\metamaskLogin\\metamaskLogin.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\PrinterDetails\\PrinterDetails.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\ModifyPrinters.js",["162","163"],"import { UserNav } from \"../../../component/Navbar/homeNav\"\r\nimport { getPrinters } from \"../../../data/data\";\r\nimport '../Myprinters.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ModifyPrinters(){\r\n    //const printers = getPrinters();\r\n    const navigate = useNavigate();\r\n    const [printers,setPrinters]=useState(getPrinters());\r\n\r\n\r\n    const goModifyPrinters= () =>{\r\n        navigate(\"/Modify\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n        \r\n        <div className=\"printerTable\">\r\n            <h1>Modify Printers</h1>\r\n            <table className=\"myPrinters\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Address</th>\r\n                        <th>Name</th>\r\n                        <th>NozzlesMounted</th>\r\n                        <th>Soluble</th>\r\n                        <th>Modify</th>\r\n                    </tr> \r\n                    {printers.printers.map((val,key)=>\r\n                    <tr key={key}>\r\n                        <td key={val.address}>{val.address}</td>\r\n                        <td key={val.name}>{val.name}<br /><input type=\"text\" placeholder=\"Modify Name\"/>\r\n                        </td>\r\n                        <td key ={val.nozzlesMounted}>{val.nozzlesMounted} <button key={\"button\"+val.name} className=\"printerButton\">Change</button></td>\r\n                        <td key ={val.soluble}>{val.soluble}\r\n                        </td>\r\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} className=\"printerButton\" onClick={()=>goModifyPrinters()}>Modify</button></td>\r\n                    </tr>)}\r\n                   </tbody> \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\LoadPrinter\\LoadPrinter.js",["164","165","166","167","168"],"import {  useState } from 'react';\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\r\nimport { HomeNav } from '../../component/Navbar/homeNav';\r\nimport Select from 'react-select';\r\nimport './LoadPrinter.css';\r\nimport {UserNav} from \"../../component/Navbar/homeNav\" \r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function LoadPrinter(){\r\n\r\n    const [error,setError]=useState(false)\r\n    const [errorMessage,SetErrorMessage]=useState('');\r\n    let  printerData={\"soluble\":true,\"foodSaety\":true,\"material\":[]};\r\n    const [section,setSection]=useState(1);\r\n    const [address, setAddress] = useState(\"\");\r\n    const [name,Setname] = useState(\"\");\r\n    const [materiale,SetMateriale] =useState([]);\r\n    const [nozzles,SetNozzles] = useState(0);\r\n    const [printTemp,SetPrintTemp] = useState(0);\r\n    const [BedTemp,SetBedTemp] = useState(0);\r\n    const [volume,SetVolume] = useState(0);\r\n    const [soluble,SetSolub] = useState(false);\r\n    const [FoodSafety,SetFood] = useState(false);\r\n    const[OneVal,SetOneVal] = useState(0);\r\n\r\n    const material=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]\r\n\r\n    const nozzle = [\r\n        {value:\"0\", label:\"1mm\"},\r\n        {value:\"1\", label:\"2mm\"},\r\n        {value:\"2\", label:\"3mm\"},\r\n        {value:\"3\", label:\"4mm\"},\r\n        {value:\"4\", label:\"5mm\"},\r\n        {value:\"5\", label:\"6mm\"}\r\n    ]\r\n\r\n    //PRENDO SOLO 1 ELEMENTO\r\n    const MountedNozzles = [\r\n        {value:\"0\", label:\"1mm\"},\r\n        {value:\"1\", label:\"2mm\"},\r\n        {value:\"2\", label:\"3mm\"},\r\n        {value:\"3\", label:\"4mm\"},\r\n        {value:\"4\", label:\"5mm\"},\r\n        {value:\"5\", label:\"6mm\"}\r\n    ]\r\n\r\n    let onBoarding=new OnBoarding();\r\n\r\n\r\n            /*if(window.ethereum){\r\n                const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\r\n                if(accounts.length>0)\r\n                    navigate('/')\r\n                else\r\n                    window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\r\n\r\n    const handleChange=(option)=>{\r\n        let values=[]\r\n        option.map((value)=>{\r\n            values.push(parseInt(value.value));\r\n            \r\n        })\r\n        SetMateriale(values);\r\n        if(values.length===0)\r\n            printerData['material']=undefined;\r\n        console.log(printerData['material']);\r\n        \r\n\r\n    }\r\n\r\n\r\n    const handleSubmit= async(event)=>{\r\n        event.preventDefault();\r\n        let result=false;\r\n        if(result){\r\n            console.log(\"webekbj\")\r\n            return}\r\n        else {\r\n            let printerobj = {address : address, name: name, materiale: materiale, nozzles:nozzles, printTemp:printTemp, BedTemp: BedTemp, volume:volume, soluble: soluble, FoodSafety: FoodSafety}\r\n            console.log(printerobj)\r\n            await onBoarding.addPrinter(printerobj);\r\n        }\r\n\r\n    }\r\n\r\n    const checkError=async(printerData)=>{\r\n\r\n        if(printerData['name'].match( /^[a-zA-Z0-9]+$/g)==null){\r\n            setError(true);\r\n            SetErrorMessage(\"The inserted character are not valid\");\r\n            return true;\r\n        }\r\n        else if(printerData['address'].length<10){\r\n            setError(true);\r\n            SetErrorMessage(\"Invalid address\");   \r\n            return true;\r\n            //ALTRI CHECK SU ADDRESS PROVVISORIO\r\n        }\r\n        else return false;\r\n\r\n    \r\n    }      \r\n    \r\n    \r\nuseEffect(() => {\r\n    console.log(OneVal)\r\n  },[])\r\n  \r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className='sign'>\r\n            <UserNav/>\r\n            <h1>Add printer</h1>\r\n            <div className='SignIn'>\r\n            <form  onSubmit={handleSubmit}>\r\n            \r\n            <div className=\"sectionPage\" style={{display:section===1?('block'):('none')}}>\r\n                <label>\r\n                    <p>Address</p>\r\n                    <input type=\"text\" name=\"address\" onChange={(event) =>{setAddress(event.target.value)}} autoComplete=\"off\" required minLength=\"4\" maxLength=\"90\"></input>\r\n                </label><br/>\r\n\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input type=\"text\" name=\"username\" onChange={event =>{ Setname(event.target.value)}} autoComplete=\"off\" required minLength=\"4\" maxLength=\"10\"></input>\r\n                </label><br/>\r\n                <label>\r\n                <p>Material</p>\r\n                    <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                    options={material}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n                </label><br/>\r\n                </div>\r\n\r\n                <div className=\"sectionPage\" style={{display:section===2?('block'):('none')}}>\r\n                <label>\r\n                <p>Nozzles</p>\r\n                <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                    options={nozzle}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n</label><br/>\r\n                <label>\r\n                <p>Nozzles mounted</p>\r\n                <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                        <Select onChange={(e)=>{SetOneVal(e)}}\r\n                        options ={MountedNozzles}\r\n                        />\r\n                    </div>\r\n                   {/* <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                        min=\"1\" max=\"10\" onChange={event => {printerData[\"nozzlesMount\"]=event.target.value\r\n                        }}/>*/} \r\n\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Print Temperature</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetPrintTemp(event.target.value)}}/>\r\n                </label><br/>\r\n                </div>\r\n\r\n                <div className=\"sectionPage\" style={{display:section===3?('block'):('none')}}>\r\n                <label>\r\n                <p>Bed Temperature</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetBedTemp(event.target.value)}}/>\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Volume</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetVolume(event.target.value)}}/>\r\n\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>soluble</p>\r\n                    <select name=\"soluble\" id=\"soluble\" onClick={(e)=>SetSolub(e.target.value)}>\r\n                        <option value={true}>Yes</option>\r\n                        <option value={false}>No</option>\r\n                    </select>\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Food Safety</p>\r\n                    <select name=\"food\" id=\"food\" onClick={(e)=>SetFood(e.target.value)}>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                </select>\r\n                </label><br/>\r\n                </div>\r\n                { error && <p className='error'>{errorMessage}</p>}\r\n                \r\n                <div className='elementInsertion'>\r\n                {                   \r\n                                    \r\n                                    section>1\r\n                                        &&\r\n                                    \r\n                <button className=\"next1\" type='button' onClick={()=>setSection((prev)=>prev-1)}>Indietro</button>\r\n                                       \r\n                }\r\n                {                       section!==3\r\n                                            &&\r\n                     <button className=\"next1\" type='button'style={{marginLeft:section===1?('130px'):('auto')}} \r\n                        onClick={()=>setSection((prev)=>prev+1)}>Avanti</button>\r\n                }\r\n\r\n                {section===3 && <button className=\"next1\" type='submit'>Aggiungi</button>}\r\n                </div>\r\n\r\n\r\n            </form>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\Modify.js",["169","170","171","172","173","174","175","176","177"],"import { UserNav } from \"../../../component/Navbar/homeNav\"\r\nimport { getPrinters } from \"../../../data/data\";\r\nimport '../Myprinters.css'\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\r\nimport Select from 'react-select';\r\nimport Web3 from \"web3\";\r\n\r\nexport default function Modify(){\r\n\r\n    const [NamePrinter,SetNamePrinter] = useState(\"\");\r\n    const [Nozzles,SetNozzles] = useState(0);\r\n    const [Soluble,SetSoluble] = useState(0);\r\n    const [foods,Setfood] = useState(0)\r\n    const navigate=useNavigate();\r\n    const [materials,SetMaterials] = useState({});\r\n    const[SelectMats,SetSelectMats] = useState([{}]);\r\n    const [ print,Setprint] = useState({});\r\n    let {id}  = useParams(); \r\n\r\n    let web3 = new Web3();\r\n\r\n    const material=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]\r\n\r\n    const food = [\r\n        {value:\"1\", label:\"Si\"},\r\n        {value:\"0\",label:\"No\"}]\r\n\r\n    const solub = [\r\n        {value:\"1\", label:\"Si\"},\r\n        {value:\"0\",label:\"No\"}]\r\n\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter(id);\r\n        SetNozzles(printer.mountedNozzles)\r\n        SetSoluble(printer.soluble === false ? 0 : 1)\r\n        Setprint({...print,mountedNozzles:printer.mountedNozzles,soluble:printer.soluble,foodSafety:printer.foodSafety})\r\n        Setfood(printer.foodSafety === false ? 0 : 1)    \r\n    return printer;\r\n    }\r\n\r\n    async function ModifyPrinter(){\r\n        const onBoarding = new OnBoarding();\r\n        Setprint({...print, soluble: Soluble,foodSafety: foods,/*mountedNozzles:Nozzles,*/ type: materials});\r\n        console.log(print)\r\n        var printer = await onBoarding.ModifyPrinter(\r\n            id,\r\n            print\r\n        )\r\n\r\n        var mount = await onBoarding.mountMaterial(\r\n            web3.utils.toAscii(materials[0].name),\r\n            0,\r\n            id\r\n        )\r\n        return mount;\r\n    }\r\n\r\n    async function getMaterials(){\r\n        const onboard = new OnBoarding();\r\n        var materials = await onboard.getMaterials();\r\n        materials.forEach((val,index) => {\r\n            SetMaterials(\r\n                [...materials,{name: web3.utils.toUtf8(val.name), type: val.mType,color: val.color,quantityKG: val.quantityKG, printTemp: val.printTemperature, bedTemp: val.bedTemperature}]\r\n            )\r\n            console.log(materials[0].name)\r\n            SetSelectMats(\r\n                [...SelectMats,{value: index.toString(),label : web3.utils.toUtf8(val.name) }]\r\n            )\r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        LoadPrinterMaker();\r\n        getMaterials();\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>Modify Printer</h1>\r\n            <div className=\"SignIn\">\r\n                \r\n\r\n        <label>\r\n        <p>NozzlesMounted :{Nozzles}</p>\r\n        <p><input type=\"number\" placeholder=\"nozzles\"onChange={(event)=> Setprint({...print,mountedNozzles:event.target.value})}/></p>\r\n        </label>\r\n\r\n        <label>\r\n        <p>Materiale solubile</p>\r\n        \r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select \r\n                    options={solub}\r\n                    placeholder={Soluble ? (solub[Soluble].label) : \"No\"}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{(Setprint({...print,\"soluble\": Boolean(parseInt(option.value))}));\r\n                    console.log(option.value);}}/>\r\n                    </div>\r\n        </label>\r\n        \r\n        <label>\r\n        <p>Food Safety</p>\r\n        \r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select  \r\n                    options={food}\r\n                    placeholder={foods ? (food[foods].label) : \"No\"}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{(Setprint({...print,\"foodSafety\": Boolean(parseInt(option.value))}));\r\n                    console.log(option.value);}}/>\r\n                    </div>  \r\n        </label>\r\n\r\n        <label>\r\n            <p> Mount Material</p>\r\n        </label>\r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select  \r\n                    options={SelectMats}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{\r\n                    Setprint({...print,'MaterialDetails':materials.find(x => x.name == option.label)})\r\n                    console.log(print);}}/>\r\n                    </div>\r\n\r\n        <button className=\"printerButton\" onClick={ModifyPrinter}>Modify</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Materials\\AddMaterials.js",["178","179","180"],"import React from 'react'\r\nimport './AddMaterial.css'\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { getMaterial, getColor } from '../../data/data'\r\n\r\n\r\nexport default function AddMaterials(route) {\r\n\r\n  const [materiale,SetMateriale] =useState([]);\r\n  const [colors,SetColor] = useState([]);\r\n  const [Name,Setname] = useState(\"\");\r\n  const [quantityKG,SetquantityKG] = useState(0);\r\n  const [printTemp,SetprintTemp] = useState(0);\r\n  const [bedTemp,SetBedTemp] = useState(0);\r\n  const [section,setSection]=useState(1);\r\n  \r\n\r\n  let onBoarding = new OnBoarding();\r\n\r\n\r\n  \r\n  const material=getMaterial()\r\n    \r\n  const color= getColor();\r\n\r\n    const handleChangeMats=(option)=>{\r\n      let values=[]\r\n      option.map((value)=>{\r\n          values.push(parseInt(value.value));\r\n          \r\n      })\r\n      SetMateriale(values);\r\n      console.log(values)\r\n  }\r\n\r\n  const handleChangeColor=(option)=>{\r\n    let values=[]\r\n    option.map((value)=>{\r\n        values.push(parseInt(value.value));\r\n        \r\n    })\r\n    SetColor(values);\r\n    console.log(values)\r\n}\r\n\r\nconst handleSubmit = async(event)=>{\r\n  event.preventDefault();\r\n  let matobj = {name: Name, materiale: materiale, colors: colors,quantityKG: quantityKG, printTemp: printTemp, bedTemp: bedTemp}\r\n  console.log(matobj)\r\n  await onBoarding.addMaterial(matobj)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className='sign'>\r\n            <UserNav/>\r\n\r\n            <div className=\"SignIn\" >\r\n              <h1>Add Materials</h1>\r\n              <div className='sectionPage' style={{display:(section===1)?('block'):('none')}}>\r\n\r\n              <label>\r\n                    <p>Name</p>\r\n                    <input type=\"text\" onChange={event =>{Setname(event.target.value)}}></input>\r\n                </label><br/>\r\n\r\n                <label>\r\n                  <p>Material Type</p>\r\n                  <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti\r\n                      options={material}\r\n                      getOptionValue={(option)=>option.value}\r\n                      onChange={(option)=>{handleChangeMats(option);\r\n                      }}\r\n                      />\r\n                  </div>\r\n                </label>\r\n\r\n                <label>\r\n                  <p>Color</p>\r\n                  <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti \r\n                      options={color}\r\n                      getOptionValue={(option)=>option.value}\r\n                      onChange={(option)=>{handleChangeColor(option);\r\n                      }}\r\n                      />\r\n\r\n                  </div>\r\n                </label>\r\n              </div>\r\n\r\n              <div className='sectionPage' style={{display:(section===2)?('block'):('none')}}>\r\n                <label>\r\n                  <p>Quantity KG</p>\r\n                  <input type=\"number\" onChange={event => {SetquantityKG(event.target.value)}}></input>\r\n                </label>\r\n\r\n                <label>\r\n                  <p>Print Temp</p>\r\n                  <input type=\"number\" onChange={event => {SetprintTemp(event.target.value)}}></input>\r\n                </label>\r\n\r\n                <label>\r\n                  <p>Bed Temp</p>\r\n                  <input type=\"number\" onChange={event => {SetBedTemp(event.target.value)}}></input>\r\n                </label><br/>\r\n                <button className='next1' onClick={handleSubmit} >Add Material</button>\r\n                </div>\r\n\r\n                <div className='elementInsertion'>\r\n                  {\r\n                    section>1\r\n                    &&\r\n                    <button className=\"next1\" type='button' onClick={()=>setSection((prev)=>prev-1)}>Indietro</button>                  }\r\n                  {\r\n                    section==1\r\n                    &&\r\n                    <button className=\"next1\" type='button'style={{marginLeft:section===1?('130px'):('auto')}} \r\n                        onClick={()=>setSection((prev)=>prev+1)}>Avanti</button>\r\n                  }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div>\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\signin\\SignIn.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MountMaterial\\MountMaterial.js",["181","182","183","184"],"import React, { useEffect, useState } from 'react'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding'\r\nimport './MountMaterial.css'\r\nimport Select from 'react-select'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function MountMaterial() {\r\n\r\n    const[Name,SetName] = useState(\"\");\r\n    const[printer,setPrinter]= useState(0);\r\n    const[material,setMaterial]=useState([]);\r\n    let {id}  = useParams();\r\n    const materiale=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]  \r\n        \r\n        const handleChangeMats=(option)=>{\r\n          let values=[]\r\n          option.map((value)=>{\r\n              values.push(parseInt(value.value));\r\n              \r\n          })\r\n          setMaterial(values);\r\n              }\r\n      \r\n      const handleSubmit = async(event)=>{\r\n        event.preventDefault();\r\n        let matobj = {Name: Name, material: material, printer: printer}\r\n        console.log(matobj)\r\n      }\r\n\r\n      useEffect(() => {\r\n        console.log(id)\r\n      },[])\r\n      \r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className='sign'>\r\n        <UserNav/>\r\n        <h1>Mount Material</h1>\r\n    </div>\r\n\r\n      <div className='SignIn'>\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" onChange={(event)=> SetName(event.target.value)}></input>\r\n        </label>\r\n\r\n        <label>\r\n          <p>Material Type</p>\r\n          <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti\r\n                      options={materiale}\r\n                      getOptionValue={(option)=>option.value}\r\n                      onChange={(option)=>{handleChangeMats(option);\r\n                      }}\r\n                      />\r\n                  </div>\r\n        </label><br />\r\n        <button className='next1' onClick={handleSubmit}>Add Material</button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\UpdateMaterial\\UpdateMaterial.js",["185","186","187","188","189"],"import React, { useState } from 'react'\r\nimport './UpdateMaterial.css'\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport Select from 'react-select';\r\nimport Web3 from 'web3'\r\n\r\n\r\nexport default function UpdateMaterial() {\r\n\r\n  let {id} = useParams()\r\n\r\nconst[name,Setname] = useState(\"\");\r\nconst[type,Settype] = useState([0]);\r\nconst[quantityKG,SetquantityKG] = useState(0);\r\nconst[printTemp,SetprintTemp] = useState(0);\r\nconst[bedTemp,SetBedTemp] = useState(0);\r\nconst[colore,SetColor] = useState([0]);\r\n\r\nconst[check,Setcheck] = useState(true);\r\n\r\nconst [Material,SetMaterial] = useState([]);\r\n\r\nconst web3 = new Web3();\r\n\r\nconst handleChange=(option)=>{\r\n  let values=[]\r\n  option.map((value)=>{\r\n      values.push(parseInt(value.value));\r\n      \r\n  })\r\n  Settype(values);\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  //console.log(id)\r\n  async function getMat(){\r\n  const onboard = new OnBoarding();\r\n  const web3 = new Web3();\r\n  var mate = await onboard.getMaterials();\r\n  console.log(mate[0].name)\r\n  console.log(id)\r\n  //var mats = await onboard.getMaterial(id)\r\n  //let mats = mate[id]\r\n  //console.log(mats)\r\n  SetMaterial({name:web3.utils.hexToUtf8(mate[parseInt(id)].name)})\r\n  SetquantityKG(mate[id].quantityKG)\r\n  SetprintTemp(mate[id].printTemperature)\r\n  SetBedTemp(mate[id].bedTemperature)\r\n  SetColor(mate[id].color)\r\n  Settype(mate[id].mType)\r\n  }\r\n  getMat();\r\n  console.log(Material.color)\r\n},[])\r\n\r\nconst material=[\r\n  {value:\"0\" , label:\"ABS\"},\r\n  {value:\"1\",label:\"PLA\"},\r\n  {value:\"2\",label:\"PETG\"}]  \r\n  \r\n  const color=[\r\n    {value:\"0\", label:\"NONE\"},\r\n    {value:\"1\", label:\"BLACK\"},\r\n    {value:\"2\", label:\"WHITE\"},\r\n    {value:\"3\", label:\"BROWN\"},\r\n    {value:\"4\",label:\"GRAY\"},\r\n    {value:\"5\", label:\"YELLOW\"},\r\n    {value:\"6\", label:\"ORANGE\"},\r\n    {value:\"7\", label:\"RED\"},\r\n    {value:\"8\", label:\"PINK\"},\r\n    {value:\"9\", label:\"PURPLE\"},\r\n    {value:\"10\", label:\"BLU\"},\r\n    {value:\"11\", label:\"GREEN\"}]\r\n\r\n\r\n\r\nasync function UpdateMats(){\r\n  const onboarding = new OnBoarding();\r\n  console.log(Material.name)\r\n  console.log(type)\r\n  console.log(colore)\r\n  console.log(quantityKG)\r\n  console.log(printTemp)\r\n  var mats = await onboarding.updateMaterial(Material.name,type,colore,quantityKG,printTemp,bedTemp);\r\n  console.log(mats)\r\n\r\n}\r\n\r\nasync function checkMaterial(){\r\n  const onboarding = new OnBoarding();\r\n  Setcheck(await onboarding.CheckMaterial(name))\r\n  console.log(check)\r\n}\r\n\r\n\r\n  return (\r\n    <div className='sign'>\r\n        <UserNav/>\r\n        <h1>UpdateMaterial</h1>\r\n        <div className='SignIn'>\r\n\r\n          <p>Name : {Material['name']}</p>\r\n          <p>Material Type</p>\r\n          <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                   placeholder={type ? (material[type].label): 0}\r\n                    options={material}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n          <p>Color</p>\r\n          <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti \r\n                      placeholder={colore ? (material[colore].label) : 0}\r\n                      options={color}\r\n                      getOptionValue={(option)=>option.value}\r\n                      />\r\n\r\n                  </div>\r\n          <p>QuantityKg</p>  \r\n          <input type=\"number\" placeholder={quantityKG+ \" KG\"} onChange={(event)=>{SetquantityKG(event.target.value)}}></input>\r\n          <p>PrintTemp</p>\r\n          <input type=\"number\" placeholder={printTemp+ \" °C\"} onChange={(event)=>{SetprintTemp(event.target.value)}}></input>\r\n          <p>bedTemp</p>\r\n          <input type=\"number\" placeholder={bedTemp+\" °C\"} onChange={(event)=>{SetBedTemp(event.target.value)}}></input><br/>\r\n          <button className='next1' onClick={(UpdateMats)}>Update Material</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MyMaterials\\MyMaterials.js",["190","191","192","193","194"],"import React from 'react'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport { useEffect } from 'react';\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Web3 from \"web3\"\r\n\r\nexport default function MyMaterials() {\r\n\r\n  const [materialsList,SetMaterialsList]=useState([])\r\n  const navigate = useNavigate();\r\n  const [action,SetAction] = useState(\"\");\r\n  \r\n  const material=[\r\n    {value:\"0\" , label:\"ABS\"},\r\n    {value:\"1\",label:\"PLA\"},\r\n    {value:\"2\",label:\"PETG\"}]  \r\n    \r\n  const colors=[\r\n    {value:\"0\", label:\"NONE\"},\r\n    {value:\"1\", label:\"BLACK\"},\r\n    {value:\"2\", label:\"WHITE\"},\r\n    {value:\"3\", label:\"BROWN\"},\r\n    {value:\"4\",label:\"GRAY\"},\r\n    {value:\"5\", label:\"YELLOW\"},\r\n    {value:\"6\", label:\"ORANGE\"},\r\n    {value:\"7\", label:\"RED\"},\r\n    {value:\"8\", label:\"PINK\"},\r\n    {value:\"9\", label:\"PURPLE\"},\r\n    {value:\"10\", label:\"BLU\"},\r\n    {value:\"11\", label:\"GREEN\"}]\r\n\r\n\r\n  let result=\"prova\"\r\n\r\n\r\n  const handleSubmit = async(name,type,index)=>{\r\n    const onboarding = new OnBoarding();\r\n    await onboarding.removeMaterial(name, type, index)\r\n    window.location.reload()\r\n  }\r\n\r\n  const getMaterialsName = async()=>{\r\n    const onboard = new OnBoarding();\r\n    await onboard.GetMaterialsName();\r\n\r\n  }\r\n\r\n  useEffect(()=>{\r\n    async function getMaterials(){\r\n      const onboarding = new OnBoarding();\r\n      const web3 = new Web3()\r\n      var mats = await onboarding.getMaterials();\r\n      console.log(mats)\r\n      let stringa = \"ciao\"\r\n      getMaterialsName();\r\n      const materia = [\r\n        \"ABS\", \"PLA\", \"PETG\"\r\n      ]\r\n       result = mats.map((value,key)=>{\r\n\r\n        return(<tr key={key}>\r\n                <td key={value.name}>{web3.utils.toUtf8(value.name)}</td>\r\n                <td key={value.mType+\"material\"}>{materia[value.mType]}</td>\r\n                <td key={value.color+\"color\"}>{value.color}</td>\r\n                <td key={value.quantityKG}>{value.quantityKG}</td>\r\n                <td key={value.printTemperature+\"Printer\"}>{value.printTemperature}</td>\r\n                <td key={value.bedTemperature+\"Bed\"}>{value.bedTemperature}</td>\r\n                <td><button className='next1' onClick={()=>handleSubmit(value.name,value.mType,key)}>Remove</button></td>\r\n                <td><button className='next1' onChange={SetAction(\"Update\")}  onClick={()=>navigate(`/UpdateMaterial/${key.toString()}`,{state:{prov:\"ciao\"}})} >Update</button></td>\r\n\r\n        </tr>)\r\n  \r\n      })\r\n      console.log(result)\r\n      SetMaterialsList(result)\r\n    }\r\n    getMaterials();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n        <div className='sign'>\r\n        <UserNav/>\r\n        <h1>My Materials</h1>\r\n        \r\n        <table className='myPrinters'>\r\n\r\n          <tbody>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>Type</th>\r\n              <th>Color</th>\r\n              <th>quantityKG</th>\r\n              <th>Print Temp</th>\r\n              <th>Bed Temp</th>\r\n              <th>Remove</th>\r\n              <th>Update</th>\r\n            </tr>\r\n            {materialsList}\r\n          </tbody>\r\n        </table>\r\n        <div className='SignIn' style={{border:'0px'}}>\r\n        <button className='next1' onClick={()=>navigate('/AddMaterials')}>Add Materials</button>\r\n        </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\WalletCheck\\WalletConnected.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\design\\design.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\Navbar\\homeNav.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\data\\data.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\STLviewer\\Stl.js",[],["195","196"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\OnBoarding\\OnBoarding.js",["197"],"import Web3Istance from \"../Web3\";\r\nimport OnBoardingABI from '../../ABIs/OnBoarding.json'\r\nimport { ethers } from \"ethers\";\r\n\r\nexport default class OnBoarding extends Web3Istance{\r\n    constructor(){\r\n        super();\r\n        let ABIScheduling = OnBoardingABI.abi;\r\n        let ContractNetworks = OnBoardingABI.networks;\r\n        let contractAddress=ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\r\n        this.contract=new this.web3.eth.Contract(ABIScheduling,contractAddress);\r\n        //console.log(`Indirizzo Contratto ----- `+ contractAddress);  \r\n        }\r\n    \r\n//address,name,materialSupported,nozzles,mountedNozzles,printTemp,bedTemp,volume,soluble,foodSafety\r\n        async addPrinter(printerInfo){\r\n            let account=await this.checkIfWalletIsConnected();\r\n            await this.contract.methods.addPrinter(\r\n                printerInfo.address,\r\n                this.utils.fromAscii(printerInfo.name),\r\n                printerInfo.materiale,\r\n                [0,1,2], \r\n                parseInt(printerInfo.nozzles),\r\n                parseInt(printerInfo.printTemp),\r\n                parseInt(printerInfo.BedTemp),\r\n                parseInt(printerInfo.volume),\r\n                printerInfo.soluble,\r\n                printerInfo.FoodSafety).send({from:account,gas:4600000}) \r\n        }\r\n\r\n        async getPrinters(){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result=await this.contract.methods.getMakerPrinters().call({from:account});\r\n           console.log(account)\r\n           console.log(result)\r\n            return result;\r\n        }\r\n        \r\n        async RemovePrinter(index){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            await this.contract.methods.RemovePrinter(index).send({from:account})\r\n        }\r\n\r\n        async getPrinter(index){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result = await this.contract.methods.getMakerPrinter(index).call({from:account});\r\n            return result;\r\n        }\r\n\r\n        async addMaterial(material){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            console.log(account)\r\n\r\n           let result = await this.contract.methods.addMaterials(\r\n                this.utils.asciiToHex(material.name),\r\n                material.materiale,\r\n                material.colors,\r\n                material.quantityKG,\r\n                material.printTemp,\r\n                material.bedTemp).send({from:account,gas:4600000});\r\n                console.log(result)\r\n           }\r\n\r\n        async ModifyPrinter(index,printerData){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let printer =await this.contract.methods.ModifyPrinter(index,\r\n                printerData.soluble,\r\n                printerData.foodSafety,\r\n                parseInt(printerData.mountedNozzles),\r\n                ).send({from:account});\r\n            return printer;\r\n        }\r\n\r\n        async updateMaterial(name, type, color, quantityKG, printTemp,bedTemp){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            await this.contract.methods.updateMaterial(this.utils.asciiToHex(name), type, color, quantityKG, printTemp,bedTemp).send({from:account});\r\n\r\n        }\r\n\r\n        async removeMaterial(name, type){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            console.log(this.utils.toUtf8(name))\r\n            await this.contract.methods.removeMaterial(name,type).send({from:account,gas:4600000})\r\n        }\r\n\r\n        async mountMaterial(name, type, printer){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let res = await this.contract.methods.mountMaterial(\r\n                this.web3.utils.fromAscii(name),\r\n                type,\r\n                printer).send({from:account,gas:4600000});\r\n                console.log(res)\r\n                return res;\r\n        }\r\n\r\n        async getMaterials(){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result = await this.contract.methods.getMaterials().call({from:account});\r\n           console.log(account)\r\n           console.log(result)\r\n            return result;\r\n        }\r\n\r\n        async getMaterial(name,type){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result = await this.contract.methods.getMaterial(\r\n                name,\r\n                type\r\n            ).call({from:account});\r\n            return result;\r\n\r\n        }\r\n\r\n        async CheckMaterial(name){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result =  await this.contract.methods.checkMaterial(this.utils.asciiToHex(name)).call({from:account});\r\n\r\n            return result\r\n        }\r\n\r\n        async GetMaterialsName(){\r\n            let account = await this.checkIfWalletIsConnected();\r\n            let result = await this.contract.methods.getMaterialsName().call({from:account})\r\n            result.forEach(element => {\r\n                console.log(this.utils.toUtf8(element))\r\n            });\r\n        }\r\n\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Users\\Users.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Web3.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\ipfs.js",[],["198","199"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\AddDesign.js",["200","201","202","203","204","205","206","207","208"],"import React, { useState } from 'react'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport './AddDesign.css'\r\nimport { revealVote } from '../../data/data'\r\nimport Select from 'react-select'\r\nimport VotingSystem from '../../SmartContracts/VotingSystem/VotingSystem'\r\nimport { useEffect } from 'react'\r\nimport StlRenderer from './StlRenderer';\r\nimport UploadSTL from './UploadStl'\r\n\r\nexport default function AddDesign(){\r\n\r\n    const stating=[\r\n        {value:\"0\", label:\"none\"},\r\n        {value:\"1\", label:\"first\"},\r\n        {value:\"2\", label:\"second\"}\r\n    ]\r\n\r\n    const [filehash,SetHash] = useState();\r\n    const [design,setDesign] = useState({});\r\n    const [selectedFile, onChangeFile] = useState('undefined');\r\n    const [taup,Settaup] = useState();\r\n    const[taur,settaur] = useState();\r\n    const [StlLoaded,SetStlLoaded] = useState(false);\r\n\r\n\r\n    const voting = new VotingSystem();\r\n\r\n\r\n/*\r\n    <Select isMulti\r\n                      options={material}\r\n                      getOptionValue={(option)=>option.value}\r\n                      onChange={(option)=>{handleChangeMats(option);\r\n                      }}\r\n                      />\r\n*/\r\n\r\nconst handleSubmit = async(event)=>{\r\n    event.preventDefault();\r\n    let stateobj = {filehash: filehash, taur: taur, taup: taup}\r\n    console.log(stateobj)\r\n    let res = await voting.announce(filehash);\r\n    let result = await voting.getNumDesignes();\r\n\r\n    }\r\n\r\nuseEffect(()=>{\r\n    \r\nasync function getDesign(){\r\n    let design = await voting.getDesigne(0);\r\n    let res = await voting.getNumDesignes();\r\n    let test = await voting.getDesigns();\r\n    console.log(test)\r\n    console.log(design);\r\n\r\n}\r\ngetDesign();\r\n  },[])\r\n\r\n  return (\r\n    <div className='sign'>\r\n        <UserNav/>\r\n\r\n        <h1>Add Design</h1>\r\n        <div className='SignIn'>\r\n            \r\n            <label>\r\n                <p>FileHash</p>\r\n                <input type=\"text\" placeholder='filehash' onChange={(event)=> SetHash(event.target.value)}/>\r\n            </label>\r\n<br/>\r\n            <label>\r\n                <input type=\"number\" placeholder='taur' onChange={(e)=> settaur(e)}/>\r\n            </label>\r\n<br/>\r\n            <label>\r\n                <input type=\"number\" placeholder='taup' onChange={(e)=> Settaup(e)}/>\r\n            </label>\r\n\r\n                <br/>\r\n            <label>\r\n                <p>Select STL File</p>\r\n                <UploadSTL changeFile={(val) => {onChangeFile(val); SetStlLoaded(true)}}/>\r\n                \r\n                {StlLoaded && <StlRenderer file={selectedFile}/>}\r\n                </label>\r\n           <button className=\"printerButton\" onClick={handleSubmit}>Add Design</button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\VotingSystem\\VotingSystem.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\StlRenderer.js",["209"],"import React, { Component } from 'react';\r\nimport { StlViewer } from 'react-stl-file-viewer';\r\n\r\nclass StlRenderer extends Component{\r\n    \r\n    render(){\r\n\r\n        const style= {\r\n            margin: \"auto\"\r\n        }\r\n\r\n        return (\r\n        \r\n            <div style={{'width': '380px','height':'240px', 'margin':'auto' }}>\r\n            <StlViewer \r\n                width={380}\r\n                height={240} \r\n                url={this.props.file}\r\n                groundColor='white'\r\n                objectColor='rgb(50, 255, 255)'\r\n                skyboxColor='white'\r\n                gridLineColor='white'\r\n                lightColor='white'\r\n                volume={(val) => {this.setState({volume:val})}}\r\n            /> \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StlRenderer;","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\AddDesign\\UploadStl.js",["210","211"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport \"./AddDesign.css\"\r\n\r\nclass UploadSTL extends Component{\r\n\r\n  constructor({changeFile}){\r\n    super();\r\n    this.state = {file : undefined, photo: undefined, Taur: undefined, Taup: undefined, Component: undefined};\r\n    this.changeFile = changeFile;\r\n  } \r\n  \r\n\tonChange(event) {\r\n    if(event.target.files[0] === undefined) return;\r\n    let reader = new FileReader();\r\n    reader.readAsArrayBuffer(event.target.files[0]);\r\n    reader.onload = () => {\r\n      this.setState({file : reader.result});\r\n    }\r\n    let reader2 = new FileReader();\r\n    reader2.readAsDataURL(event.target.files[0]);\r\n    reader2.onload = () => {\r\n      this.changeFile(reader2.result);\r\n    }\r\n  }\r\n\r\n  getFrame() {\r\n    if(!this.state.file) {\r\n      alert('Carica un STL prima di fare una foto!');\r\n      return;\r\n    }\r\n    let canvas = document.getElementsByTagName(\"canvas\")[0];\r\n    this.setState({photo: canvas.toDataURL()});\r\n  }\r\n\r\n  async submitForm(event) {\r\n    if(!this.state.photo || !this.state.file) {\r\n      alert('Carica un STL e fai una foto prima di Annunciare!');\r\n      return;\r\n    }\r\n  }\r\n\r\n\trender() {\r\n\t\treturn(\r\n      <div>\r\n            <label>\r\n\t\t\t\t<input type=\"file\" name=\"inputSTL\" onChange={(event) => this.onChange(event)}/>\r\n            \r\n            </label>\t\r\n\r\n        <img src={this.state.photo}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UploadSTL;\r\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":5,"column":37,"nodeType":"218","messageId":"219","endLine":5,"endColumn":46},{"ruleId":"216","severity":1,"message":"217","line":3,"column":23,"nodeType":"218","messageId":"219","endLine":3,"endColumn":32},{"ruleId":"216","severity":1,"message":"220","line":11,"column":12,"nodeType":"218","messageId":"219","endLine":11,"endColumn":20},{"ruleId":"216","severity":1,"message":"221","line":13,"column":11,"nodeType":"218","messageId":"219","endLine":13,"endColumn":22},{"ruleId":"216","severity":1,"message":"222","line":13,"column":23,"nodeType":"218","messageId":"219","endLine":13,"endColumn":37},{"ruleId":"216","severity":1,"message":"223","line":14,"column":11,"nodeType":"218","messageId":"219","endLine":14,"endColumn":22},{"ruleId":"216","severity":1,"message":"224","line":14,"column":23,"nodeType":"218","messageId":"219","endLine":14,"endColumn":37},{"ruleId":"216","severity":1,"message":"225","line":18,"column":20,"nodeType":"218","messageId":"219","endLine":18,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":41,"column":20,"nodeType":"228","endLine":60,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":37,"column":36,"nodeType":"231","messageId":"232","endLine":37,"endColumn":38},{"ruleId":"216","severity":1,"message":"233","line":38,"column":24,"nodeType":"218","messageId":"219","endLine":38,"endColumn":29},{"ruleId":"216","severity":1,"message":"234","line":4,"column":19,"nodeType":"218","messageId":"219","endLine":4,"endColumn":27},{"ruleId":"216","severity":1,"message":"235","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":12},{"ruleId":"216","severity":1,"message":"236","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":16},{"ruleId":"216","severity":1,"message":"237","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":16},{"ruleId":"216","severity":1,"message":"238","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":16},{"ruleId":"216","severity":1,"message":"239","line":18,"column":12,"nodeType":"218","messageId":"219","endLine":18,"endColumn":18},{"ruleId":"216","severity":1,"message":"240","line":28,"column":17,"nodeType":"218","messageId":"219","endLine":28,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":32,"column":23,"nodeType":"228","endLine":40,"endColumn":15},{"ruleId":"216","severity":1,"message":"241","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":19},{"ruleId":"216","severity":1,"message":"242","line":11,"column":21,"nodeType":"218","messageId":"219","endLine":11,"endColumn":32},{"ruleId":"216","severity":1,"message":"243","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"244","line":19,"column":20,"nodeType":"218","messageId":"219","endLine":19,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":63,"column":27,"nodeType":"231","messageId":"232","endLine":63,"endColumn":29},{"ruleId":"216","severity":1,"message":"245","line":90,"column":11,"nodeType":"218","messageId":"219","endLine":90,"endColumn":21},{"ruleId":"226","severity":1,"message":"246","line":111,"column":5,"nodeType":"247","endLine":111,"endColumn":7,"suggestions":"248"},{"ruleId":"216","severity":1,"message":"249","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"250","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":18},{"ruleId":"216","severity":1,"message":"251","line":13,"column":12,"nodeType":"218","messageId":"219","endLine":13,"endColumn":23},{"ruleId":"216","severity":1,"message":"252","line":13,"column":24,"nodeType":"218","messageId":"219","endLine":13,"endColumn":38},{"ruleId":"216","severity":1,"message":"253","line":17,"column":11,"nodeType":"218","messageId":"219","endLine":17,"endColumn":19},{"ruleId":"216","severity":1,"message":"254","line":25,"column":11,"nodeType":"218","messageId":"219","endLine":25,"endColumn":19},{"ruleId":"216","severity":1,"message":"255","line":53,"column":13,"nodeType":"218","messageId":"219","endLine":53,"endColumn":20},{"ruleId":"226","severity":1,"message":"256","line":84,"column":7,"nodeType":"247","endLine":84,"endColumn":9,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":140,"column":85,"nodeType":"260","messageId":"261","endLine":140,"endColumn":87},{"ruleId":"229","severity":1,"message":"230","line":31,"column":25,"nodeType":"231","messageId":"232","endLine":31,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":41,"column":23,"nodeType":"231","messageId":"232","endLine":41,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":125,"column":28,"nodeType":"260","messageId":"261","endLine":125,"endColumn":30},{"ruleId":"216","severity":1,"message":"262","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":18},{"ruleId":"216","severity":1,"message":"263","line":11,"column":19,"nodeType":"218","messageId":"219","endLine":11,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":21,"column":29,"nodeType":"231","messageId":"232","endLine":21,"endColumn":31},{"ruleId":"226","severity":1,"message":"264","line":36,"column":9,"nodeType":"247","endLine":36,"endColumn":11,"suggestions":"265"},{"ruleId":"216","severity":1,"message":"266","line":15,"column":12,"nodeType":"218","messageId":"219","endLine":15,"endColumn":19},{"ruleId":"216","severity":1,"message":"240","line":26,"column":7,"nodeType":"218","messageId":"219","endLine":26,"endColumn":11},{"ruleId":"229","severity":1,"message":"230","line":30,"column":21,"nodeType":"231","messageId":"232","endLine":30,"endColumn":23},{"ruleId":"226","severity":1,"message":"267","line":59,"column":3,"nodeType":"247","endLine":59,"endColumn":5,"suggestions":"268"},{"ruleId":"216","severity":1,"message":"269","line":94,"column":16,"nodeType":"218","messageId":"219","endLine":94,"endColumn":29},{"ruleId":"216","severity":1,"message":"270","line":13,"column":10,"nodeType":"218","messageId":"219","endLine":13,"endColumn":16},{"ruleId":"216","severity":1,"message":"254","line":15,"column":9,"nodeType":"218","messageId":"219","endLine":15,"endColumn":17},{"ruleId":"216","severity":1,"message":"271","line":20,"column":9,"nodeType":"218","messageId":"219","endLine":20,"endColumn":15},{"ruleId":"216","severity":1,"message":"272","line":56,"column":11,"nodeType":"218","messageId":"219","endLine":56,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":61,"column":17,"nodeType":"228","endLine":75,"endColumn":9},{"ruleId":"212","replacedBy":"273"},{"ruleId":"214","replacedBy":"274"},{"ruleId":"216","severity":1,"message":"275","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":16},{"ruleId":"212","replacedBy":"276"},{"ruleId":"214","replacedBy":"277"},{"ruleId":"216","severity":1,"message":"278","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"279","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":14},{"ruleId":"216","severity":1,"message":"280","line":13,"column":11,"nodeType":"218","messageId":"219","endLine":13,"endColumn":18},{"ruleId":"216","severity":1,"message":"239","line":20,"column":12,"nodeType":"218","messageId":"219","endLine":20,"endColumn":18},{"ruleId":"216","severity":1,"message":"281","line":20,"column":19,"nodeType":"218","messageId":"219","endLine":20,"endColumn":28},{"ruleId":"216","severity":1,"message":"282","line":43,"column":9,"nodeType":"218","messageId":"219","endLine":43,"endColumn":12},{"ruleId":"216","severity":1,"message":"283","line":44,"column":9,"nodeType":"218","messageId":"219","endLine":44,"endColumn":15},{"ruleId":"216","severity":1,"message":"282","line":52,"column":9,"nodeType":"218","messageId":"219","endLine":52,"endColumn":12},{"ruleId":"226","severity":1,"message":"284","line":59,"column":5,"nodeType":"247","endLine":59,"endColumn":7,"suggestions":"285"},{"ruleId":"216","severity":1,"message":"286","line":8,"column":15,"nodeType":"218","messageId":"219","endLine":8,"endColumn":20},{"ruleId":"216","severity":1,"message":"287","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":51,"column":9,"nodeType":"290","endLine":51,"endColumn":38},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'printers' is assigned a value but never used.","'printerName' is assigned a value but never used.","'SetPrinterName' is assigned a value but never used.","'printerTemp' is assigned a value but never used.","'setPrinterTemp' is assigned a value but never used.","'LoadPrinterMaker' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'result' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'value' is assigned a value but never used.","'MakerNav' is defined but never used.","'cube' is defined but never used.","'cilindro' is defined but never used.","'coniglio' is defined but never used.","'metamask' is defined but never used.","'design' is assigned a value but never used.","'web3' is assigned a value but never used.","'useEffect' is defined but never used.","'setPrinters' is assigned a value but never used.","'HomeNav' is defined but never used.","'SetNozzles' is assigned a value but never used.","'checkError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'OneVal'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'getPrinters' is defined but never used.","'Navigate' is defined but never used.","'NamePrinter' is assigned a value but never used.","'SetNamePrinter' is assigned a value but never used.","'navigate' is assigned a value but never used.","'material' is assigned a value but never used.","'printer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'LoadPrinterMaker' and 'getMaterials'. Either include them or remove the dependency array.",["294"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'OnBoarding' is defined but never used.","'setPrinter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["295"],"'Setname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Material.color' and 'id'. Either include them or remove the dependency array.",["296"],"'checkMaterial' is defined but never used.","'action' is assigned a value but never used.","'colors' is assigned a value but never used.","'stringa' is assigned a value but never used.",["291"],["292"],"'ethers' is defined but never used.",["291"],["292"],"'revealVote' is defined but never used.","'Select' is defined but never used.","'stating' is assigned a value but never used.","'setDesign' is assigned a value but never used.","'res' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'voting'. Either include it or remove the dependency array.",["297"],"'style' is assigned a value but never used.","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},"Update the dependencies array to be: [OneVal]",{"range":"308","text":"309"},"Update the dependencies array to be: [LoadPrinterMaker, getMaterials]",{"range":"310","text":"311"},"Update the dependencies array to be: [id]",{"range":"312","text":"313"},"Update the dependencies array to be: [Material.color, id]",{"range":"314","text":"315"},"Update the dependencies array to be: [voting]",{"range":"316","text":"317"},[3492,3494],"[OneVal]",[2870,2872],"[LoadPrinterMaker, getMaterials]",[1128,1130],"[id]",[1566,1568],"[Material.color, id]",[1698,1700],"[voting]"]