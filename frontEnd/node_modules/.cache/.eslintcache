[{"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\index.js":"1","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\App.js":"2","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\MyPrinters.js":"4","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\myDesigneInfo\\DesignInfo.js":"5","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Homepage\\Homepage.js":"6","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Mydesignes\\mydesignes.js":"7","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\metamaskLogin\\metamaskLogin.js":"8","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\PrinterDetails\\PrinterDetails.js":"9","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\ModifyPrinters.js":"10","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\LoadPrinter\\LoadPrinter.js":"11","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\Modify.js":"12","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Materials\\AddMaterials.js":"13","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\signin\\SignIn.js":"14","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MountMaterial\\MountMaterial.js":"15","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\UpdateMaterial\\UpdateMaterial.js":"16","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MyMaterials\\MyMaterials.js":"17","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\WalletCheck\\WalletConnected.js":"18","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\design\\design.js":"19","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\Navbar\\homeNav.js":"20","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\data\\data.js":"21","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\STLviewer\\Stl.js":"22","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\OnBoarding\\OnBoarding.js":"23","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Users\\Users.js":"24","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Web3.js":"25"},{"size":1611,"mtime":1652803732137,"results":"26","hashOfConfig":"27"},{"size":3362,"mtime":1653920014603,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1652803732137,"results":"29","hashOfConfig":"27"},{"size":3573,"mtime":1653552556252,"results":"30","hashOfConfig":"27"},{"size":1879,"mtime":1652803731941,"results":"31","hashOfConfig":"27"},{"size":1547,"mtime":1652803731926,"results":"32","hashOfConfig":"27"},{"size":2547,"mtime":1652803731926,"results":"33","hashOfConfig":"27"},{"size":2438,"mtime":1652803731941,"results":"34","hashOfConfig":"27"},{"size":1452,"mtime":1652803731941,"results":"35","hashOfConfig":"27"},{"size":1838,"mtime":1652951710267,"results":"36","hashOfConfig":"27"},{"size":8643,"mtime":1653556736351,"results":"37","hashOfConfig":"27"},{"size":2404,"mtime":1653475353832,"results":"38","hashOfConfig":"27"},{"size":4416,"mtime":1653920003007,"results":"39","hashOfConfig":"27"},{"size":4720,"mtime":1653386614699,"results":"40","hashOfConfig":"27"},{"size":2051,"mtime":1653400019660,"results":"41","hashOfConfig":"27"},{"size":3712,"mtime":1653920688648,"results":"42","hashOfConfig":"27"},{"size":3210,"mtime":1653919166216,"results":"43","hashOfConfig":"27"},{"size":2314,"mtime":1652803731941,"results":"44","hashOfConfig":"27"},{"size":2105,"mtime":1652803731941,"results":"45","hashOfConfig":"27"},{"size":2017,"mtime":1653551895834,"results":"46","hashOfConfig":"27"},{"size":2526,"mtime":1653916885633,"results":"47","hashOfConfig":"27"},{"size":333,"mtime":1652803731941,"results":"48","hashOfConfig":"27"},{"size":3986,"mtime":1653638208001,"results":"49","hashOfConfig":"27"},{"size":2240,"mtime":1652803731941,"results":"50","hashOfConfig":"27"},{"size":687,"mtime":1652803731941,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"pjt84g",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\index.js",[],["110","111"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\App.js",["112"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\MyPrinters.js",["113","114","115","116","117","118","119","120"],"import { UserNav } from \"../../component/Navbar/homeNav\"\r\nimport './Myprinters.css'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\r\nimport Web3 from \"web3\"\r\n\r\nexport default function MyPrinters(){\r\n\r\n    const [printers,setPrinters] = useState([])\r\n    const navigate=useNavigate();\r\n    const[printerName,SetPrinterName] = useState();\r\n    const[printerTemp,setPrinterTemp] = useState();  \r\n    const [PrintersList,SetPrintersList] = useState([]); \r\n\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter();\r\n        setPrinters(printer)\r\n        return printer[0];\r\n    }\r\n\r\n    useEffect(()=>{\r\n      //  console.log(LoadPrinterMaker())\r\n    },[])\r\n\r\n\r\n    let result = \"ciao\";\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getPrinters(){\r\n            const onboarding = new OnBoarding();\r\n            const web3 = new Web3()\r\n            var printer = await onboarding.getPrinters();\r\n            console.log(\"ciao\")\r\n            console.log(printer)\r\n           result= printer.map((value,key)=>{\r\n               \r\n            const handleSubmit = async(event)=>{\r\n                event.preventDefault();\r\n                const onboarding = new OnBoarding();\r\n                await onboarding.RemovePrinter(key)\r\n                window.location.reload()\r\n            }\r\n\r\n                \r\n                return (<tr key={key}>\r\n                            <td key={value.name} >{web3.utils.toUtf8(value.name)}</td>\r\n                            <td key={value.volume+\"volume\"}>{value.volume}</td>\r\n                            <td key={value.maxPrintTemperature+ \"temp\"}>{value.maxPrintTemperature}</td>\r\n                            <td><button className=\"next1\" onClick={()=>navigate(`/myprinters/Modify/${key}`)}>Modify</button></td>\r\n                            <td><button className=\"next1\" onClick={handleSubmit}>Remove Printer</button></td>\r\n                </tr>)\r\n            })\r\n            /*const PrintersList = printer.map(printer=>{\r\n                <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n           })*/\r\n           console.log(result)\r\n           SetPrintersList(result);\r\n        }\r\n        getPrinters();\r\n        },[])\r\n\r\n    return(\r\n        <div>\r\n             <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>My printers</h1>\r\n            \r\n            <table className=\"myPrinters\">\r\n                \r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>NozzlesMounted</th>\r\n                    <th>Soluble</th>\r\n                    <th>Modify</th>\r\n                    <th>Remove</th>\r\n                </tr>     \r\n            {PrintersList}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        <div className='SignIn'>\r\n        <button className='next1' onClick={()=>navigate('/addprinter')}>Add Printer</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\myDesigneInfo\\DesignInfo.js",["121","122"],"import { getDesigne } from \"../../data/data\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserNav } from \"../../component/Navbar/homeNav\";\r\nimport './DesignInfo.css'\r\nimport { Stl } from \"../../component/STLviewer/Stl\";\r\nexport default function DesignInfo(){\r\n    let param = useParams();\r\n    \r\n    let design=getDesigne(param.designInfo)\r\n    console.log(design.fileNamename)\r\n\r\n    const startPrint=async()=>{\r\n    let address=\"\";\r\n    if (design.fileName===\"Cube_3d.stl\")\r\n        address=\"http://192.168.8.230\";\r\n    else address=\"http://192.168.8.240\";\r\n        window.location = address;\r\n        \r\n\r\n        /*await fetch('IP_ADDRESS/printer/start',{\r\n            method:'POST',\r\n            body:{\r\n                'design':''\r\n            },\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const result=await startPrint.json();\r\n        return result;*/\r\n    }\r\n\r\n\r\n\r\n    function importAll(r,stlFileName) {\r\n        let designes = {};\r\n        r.keys().map((item, index) => { designes[item.replace('./', '')] = r(item); });       \r\n        for(const [key,value] of Object.entries(designes)){\r\n            console.log(key)\r\n            if(key===stlFileName)\r\n                return designes[key].default;\r\n        }\r\n    }\r\n    const design_path=importAll(require.context('../../images/stlFiles/',false,/\\.stl$/),design.fileName);\r\n    \r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n            <div className=\"stl_render\">\r\n                <h1>{design.name}</h1>\r\n                <Stl design_path={design_path}/>\r\n                <div className=\"designInfo\">                    \r\n                    <p>{design.info}</p>\r\n                    <button className=\"printButton\" onClick={startPrint}>Stampa</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Homepage\\Homepage.js",["123"],"//import { Outlet } from 'react-router-dom';\r\nimport './Homepage.css';\r\n//import { ethers } from \"ethers\";\r\nimport { HomeNav, MakerNav } from '../../component/Navbar/homeNav';\r\nimport { UserNav } from '../../component/Navbar/homeNav';\r\nimport {  useEffect, useState } from 'react';\r\nimport Design from '../design/design';\r\nimport User from '../../SmartContracts/Users/Users';\r\n//import User from './SmartContracts/Users/Users';\r\n\r\nfunction Homepage() {\r\n  //let nav=null;\r\n  const [loaded,setLoaded]=useState(false);\r\n  const [nav,setNav]=useState();\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    const accountCheck=async()=>{\r\n      let user=new User();\r\n      const {ethereum}=window;\r\n      await ethereum.request({ method: 'eth_accounts' })\r\n        .then((res)=>{\r\n          if(res.length>0){\r\n            user.isUser()\r\n              .then((res)=>{\r\n                if(res){\r\n                  setLoaded(true);\r\n                  setNav(<UserNav/>);\r\n                }\r\n                else {\r\n                  setLoaded(true);\r\n                  setNav(<HomeNav/>);\r\n                }\r\n                })\r\n              .catch(()=>{setLoaded(true)\r\n              setNav(<HomeNav/>)})\r\n          }\r\n         else{\r\n           setLoaded(true);\r\n          setNav(<HomeNav/>);\r\n        }\r\n        })};\r\n    accountCheck();\r\n  },[loaded])\r\n\r\n  if(loaded){\r\n  return (\r\n    <div>\r\n      {nav}\r\n      <div className='login'>\r\n      </div>\r\n       <Design/>\r\n    </div>\r\n  );}\r\n  else return (<span>Loading</span>)\r\n}\r\n\r\nexport default Homepage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Mydesignes\\mydesignes.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\metamaskLogin\\metamaskLogin.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\PrinterDetails\\PrinterDetails.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\ModifyPrinters.js",["124","125"],"import { UserNav } from \"../../../component/Navbar/homeNav\"\r\nimport { getPrinters } from \"../../../data/data\";\r\nimport '../Myprinters.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ModifyPrinters(){\r\n    //const printers = getPrinters();\r\n    const navigate = useNavigate();\r\n    const [printers,setPrinters]=useState(getPrinters());\r\n\r\n\r\n    const goModifyPrinters= () =>{\r\n        navigate(\"/Modify\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n        \r\n        <div className=\"printerTable\">\r\n            <h1>Modify Printers</h1>\r\n            <table className=\"myPrinters\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Address</th>\r\n                        <th>Name</th>\r\n                        <th>NozzlesMounted</th>\r\n                        <th>Soluble</th>\r\n                        <th>Modify</th>\r\n                    </tr> \r\n                    {printers.printers.map((val,key)=>\r\n                    <tr key={key}>\r\n                        <td key={val.address}>{val.address}</td>\r\n                        <td key={val.name}>{val.name}<br /><input type=\"text\" placeholder=\"Modify Name\"/>\r\n                        </td>\r\n                        <td key ={val.nozzlesMounted}>{val.nozzlesMounted} <button key={\"button\"+val.name} className=\"printerButton\">Change</button></td>\r\n                        <td key ={val.soluble}>{val.soluble}\r\n                        </td>\r\n                        <td key={\"button\"+val.name}><button key={\"button\"+val.address} className=\"printerButton\" onClick={()=>goModifyPrinters()}>Modify</button></td>\r\n                    </tr>)}\r\n                   </tbody> \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\LoadPrinter\\LoadPrinter.js",["126","127","128","129","130"],"import {  useState } from 'react';\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\r\nimport { HomeNav } from '../../component/Navbar/homeNav';\r\nimport Select from 'react-select';\r\nimport './LoadPrinter.css';\r\nimport {UserNav} from \"../../component/Navbar/homeNav\" \r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function LoadPrinter(){\r\n\r\n    const [error,setError]=useState(false)\r\n    const [errorMessage,SetErrorMessage]=useState('');\r\n    let  printerData={\"soluble\":true,\"foodSaety\":true,\"material\":[]};\r\n    const [section,setSection]=useState(1);\r\n    const [address, setAddress] = useState(\"\");\r\n    const [name,Setname] = useState(\"\");\r\n    const [materiale,SetMateriale] =useState([]);\r\n    const [nozzles,SetNozzles] = useState(0);\r\n    const [printTemp,SetPrintTemp] = useState(0);\r\n    const [BedTemp,SetBedTemp] = useState(0);\r\n    const [volume,SetVolume] = useState(0);\r\n    const [soluble,SetSolub] = useState(false);\r\n    const [FoodSafety,SetFood] = useState(false);\r\n    const[OneVal,SetOneVal] = useState(0);\r\n\r\n    const material=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]\r\n\r\n    const nozzle = [\r\n        {value:\"0\", label:\"1mm\"},\r\n        {value:\"1\", label:\"2mm\"},\r\n        {value:\"2\", label:\"3mm\"},\r\n        {value:\"3\", label:\"4mm\"},\r\n        {value:\"4\", label:\"5mm\"},\r\n        {value:\"5\", label:\"6mm\"}\r\n    ]\r\n\r\n    //PRENDO SOLO 1 ELEMENTO\r\n    const MountedNozzles = [\r\n        {value:\"0\", label:\"1mm\"},\r\n        {value:\"1\", label:\"2mm\"},\r\n        {value:\"2\", label:\"3mm\"},\r\n        {value:\"3\", label:\"4mm\"},\r\n        {value:\"4\", label:\"5mm\"},\r\n        {value:\"5\", label:\"6mm\"}\r\n    ]\r\n\r\n    let onBoarding=new OnBoarding();\r\n\r\n\r\n            /*if(window.ethereum){\r\n                const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\r\n                if(accounts.length>0)\r\n                    navigate('/')\r\n                else\r\n                    window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\r\n\r\n    const handleChange=(option)=>{\r\n        let values=[]\r\n        option.map((value)=>{\r\n            values.push(parseInt(value.value));\r\n            \r\n        })\r\n        SetMateriale(values);\r\n        if(values.length===0)\r\n            printerData['material']=undefined;\r\n        console.log(printerData['material']);\r\n        \r\n\r\n    }\r\n\r\n\r\n    const handleSubmit= async(event)=>{\r\n        event.preventDefault();\r\n        let result=false;\r\n        if(result){\r\n            console.log(\"webekbj\")\r\n            return}\r\n        else {\r\n            let printerobj = {address : address, name: name, materiale: materiale, nozzles:nozzles, printTemp:printTemp, BedTemp: BedTemp, volume:volume, soluble: soluble, FoodSafety: FoodSafety}\r\n            console.log(printerobj)\r\n            await onBoarding.addPrinter(printerobj);\r\n        }\r\n\r\n    }\r\n\r\n    const checkError=async(printerData)=>{\r\n\r\n        if(printerData['name'].match( /^[a-zA-Z0-9]+$/g)==null){\r\n            setError(true);\r\n            SetErrorMessage(\"The inserted character are not valid\");\r\n            return true;\r\n        }\r\n        else if(printerData['address'].length<10){\r\n            setError(true);\r\n            SetErrorMessage(\"Invalid address\");   \r\n            return true;\r\n            //ALTRI CHECK SU ADDRESS PROVVISORIO\r\n        }\r\n        else return false;\r\n\r\n    \r\n    }      \r\n    \r\n    \r\nuseEffect(() => {\r\n    console.log(OneVal)\r\n  },[])\r\n  \r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className='sign'>\r\n            <UserNav/>\r\n            <h1>Add printer</h1>\r\n            <div className='SignIn'>\r\n            <form  onSubmit={handleSubmit}>\r\n            \r\n            <div className=\"sectionPage\" style={{display:section===1?('block'):('none')}}>\r\n                <label>\r\n                    <p>Address</p>\r\n                    <input type=\"text\" name=\"address\" onChange={(event) =>{setAddress(event.target.value)}} autoComplete=\"off\" required minLength=\"4\" maxLength=\"90\"></input>\r\n                </label><br/>\r\n\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input type=\"text\" name=\"username\" onChange={event =>{ Setname(event.target.value)}} autoComplete=\"off\" required minLength=\"4\" maxLength=\"10\"></input>\r\n                </label><br/>\r\n                <label>\r\n                <p>Material</p>\r\n                    <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                    options={material}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n                </label><br/>\r\n                </div>\r\n\r\n                <div className=\"sectionPage\" style={{display:section===2?('block'):('none')}}>\r\n                <label>\r\n                <p>Nozzles</p>\r\n                <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                    options={nozzle}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n</label><br/>\r\n                <label>\r\n                <p>Nozzles mounted</p>\r\n                <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                        <Select onChange={(e)=>{SetOneVal(e)}}\r\n                        options ={MountedNozzles}\r\n                        />\r\n                    </div>\r\n                   {/* <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                        min=\"1\" max=\"10\" onChange={event => {printerData[\"nozzlesMount\"]=event.target.value\r\n                        }}/>*/} \r\n\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Print Temperature</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetPrintTemp(event.target.value)}}/>\r\n                </label><br/>\r\n                </div>\r\n\r\n                <div className=\"sectionPage\" style={{display:section===3?('block'):('none')}}>\r\n                <label>\r\n                <p>Bed Temperature</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetBedTemp(event.target.value)}}/>\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Volume</p>\r\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\r\n                    min=\"1\" max=\"10\" onChange={event => {SetVolume(event.target.value)}}/>\r\n\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>soluble</p>\r\n                    <select name=\"soluble\" id=\"soluble\" onClick={(e)=>SetSolub(e.target.value)}>\r\n                        <option value={true}>Yes</option>\r\n                        <option value={false}>No</option>\r\n                    </select>\r\n                </label><br/>\r\n\r\n                <label>\r\n                <p>Food Safety</p>\r\n                    <select name=\"food\" id=\"food\" onClick={(e)=>SetFood(e.target.value)}>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                </select>\r\n                </label><br/>\r\n                </div>\r\n                { error && <p className='error'>{errorMessage}</p>}\r\n                \r\n                <div className='elementInsertion'>\r\n                {                   \r\n                                    \r\n                                    section>1\r\n                                        &&\r\n                                    \r\n                <button className=\"next1\" type='button' onClick={()=>setSection((prev)=>prev-1)}>Indietro</button>\r\n                                       \r\n                }\r\n                {                       section!==3\r\n                                            &&\r\n                     <button className=\"next1\" type='button'style={{marginLeft:section===1?('130px'):('auto')}} \r\n                        onClick={()=>setSection((prev)=>prev+1)}>Avanti</button>\r\n                }\r\n\r\n                {section===3 && <button className=\"next1\" type='submit'>Aggiungi</button>}\r\n                </div>\r\n\r\n\r\n            </form>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Myprinters\\ModifyPrinters\\Modify.js",["131","132","133","134"],"import { UserNav } from \"../../../component/Navbar/homeNav\"\r\nimport { getPrinters } from \"../../../data/data\";\r\nimport '../Myprinters.css'\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\r\n\r\nexport default function Modify(){\r\n\r\n    const [NamePrinter,SetNamePrinter] = useState(\"\");\r\n    const [Nozzles,SetNozzles] = useState(0);\r\n    const [Soluble,SetSoluble] = useState(true);\r\n    const navigate=useNavigate();\r\n    let {id}  = useParams();\r\n    console.log(id)\r\n\r\n\r\n    async function DataChange(){\r\n    /*    console.log(NamePrinter)\r\n        console.log(Nozzles)\r\n        console.log(Soluble)\r\n    */}\r\n\r\n    async function onClickSol(){\r\n        SetSoluble(!Soluble)\r\n    }\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter(id);\r\n/*        SetNamePrinter(printer.name)\r\n        SetNozzles(printer.nozzles)\r\n        SetSoluble(printer.soluble)\r\n        */\r\n       console.log(printer)    \r\n    return printer;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        LoadPrinterMaker();\r\n        console.log(id)\r\n        console.log(NamePrinter)\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>Modify Printer</h1>\r\n            <div className=\"SignIn\">\r\n                \r\n        <label>\r\n            <p>Name : {id}</p>\r\n            <input type=\"text\" placeholder=\"Name\" onChange={(event)=> SetNamePrinter(event.target.value)}/>\r\n        </label>\r\n\r\n        <label>\r\n        <p>NozzlesMounted :{Nozzles}</p>\r\n        <p><input type=\"number\" placeholder=\"nozzles\"onChange={(event)=> SetNozzles(event.target.value)}/></p>\r\n        </label>\r\n\r\n        <label>\r\n        <p>Soluble: {Soluble.toString()}</p>\r\n        <button className=\"printerButton\" value={Soluble} onChange={e => SetSoluble(e.target.value)} onClick={onClickSol}>{Soluble.toString()}</button>\r\n        </label>\r\n\r\n        <label>\r\n            <p> Mount Material</p>\r\n        </label>\r\n            <button className=\"printerButton\" onClick={()=> navigate(`./MountMaterial`)}>Mount Material</button>\r\n\r\n        <button className=\"printerButton\">Modify</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\Materials\\AddMaterials.js",["135","136","137"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\signin\\SignIn.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MountMaterial\\MountMaterial.js",["138","139","140","141"],"import React, { useEffect, useState } from 'react'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding'\r\nimport './MountMaterial.css'\r\nimport Select from 'react-select'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function MountMaterial() {\r\n\r\n    const[Name,SetName] = useState(\"\");\r\n    const[printer,setPrinter]= useState(0);\r\n    const[material,setMaterial]=useState([]);\r\n    let {id}  = useParams();\r\n    const materiale=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]  \r\n        \r\n        const handleChangeMats=(option)=>{\r\n          let values=[]\r\n          option.map((value)=>{\r\n              values.push(parseInt(value.value));\r\n              \r\n          })\r\n          setMaterial(values);\r\n         // console.log(values)\r\n      }\r\n      \r\n      const handleSubmit = async(event)=>{\r\n        event.preventDefault();\r\n        let matobj = {Name: Name, material: material, printer: printer}\r\n        console.log(matobj)\r\n      }\r\n\r\n      useEffect(() => {\r\n        console.log(id)\r\n      },[])\r\n      \r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className='sign'>\r\n        <UserNav/>\r\n        <h1>Mount Material</h1>\r\n    </div>\r\n\r\n      <div className='SignIn'>\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" onChange={(event)=> SetName(event.target.value)}></input>\r\n        </label>\r\n\r\n        <label>\r\n          <p>Material Type</p>\r\n          <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti\r\n                      options={materiale}\r\n                      getOptionValue={(option)=>option.value}\r\n                      onChange={(option)=>{handleChangeMats(option);\r\n                      }}\r\n                      />\r\n                  </div>\r\n        </label><br />\r\n        <button className='next1' onClick={handleSubmit}>Add Material</button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\UpdateMaterial\\UpdateMaterial.js",["142","143","144","145","146"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\MyMaterials\\MyMaterials.js",["147","148","149","150","151"],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\WalletCheck\\WalletConnected.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\Pages\\design\\design.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\Navbar\\homeNav.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\data\\data.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\component\\STLviewer\\Stl.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\OnBoarding\\OnBoarding.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Users\\Users.js",[],"C:\\Users\\giova\\OneDrive\\Desktop\\Desk\\tirocinio\\prova\\frontEnd\\src\\SmartContracts\\Web3.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":5,"column":37,"nodeType":"158","messageId":"159","endLine":5,"endColumn":46},{"ruleId":"156","severity":1,"message":"157","line":3,"column":23,"nodeType":"158","messageId":"159","endLine":3,"endColumn":32},{"ruleId":"156","severity":1,"message":"160","line":11,"column":12,"nodeType":"158","messageId":"159","endLine":11,"endColumn":20},{"ruleId":"156","severity":1,"message":"161","line":13,"column":11,"nodeType":"158","messageId":"159","endLine":13,"endColumn":22},{"ruleId":"156","severity":1,"message":"162","line":13,"column":23,"nodeType":"158","messageId":"159","endLine":13,"endColumn":37},{"ruleId":"156","severity":1,"message":"163","line":14,"column":11,"nodeType":"158","messageId":"159","endLine":14,"endColumn":22},{"ruleId":"156","severity":1,"message":"164","line":14,"column":23,"nodeType":"158","messageId":"159","endLine":14,"endColumn":37},{"ruleId":"156","severity":1,"message":"165","line":18,"column":20,"nodeType":"158","messageId":"159","endLine":18,"endColumn":36},{"ruleId":"166","severity":1,"message":"167","line":41,"column":20,"nodeType":"168","endLine":58,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":37,"column":36,"nodeType":"171","messageId":"172","endLine":37,"endColumn":38},{"ruleId":"156","severity":1,"message":"173","line":38,"column":24,"nodeType":"158","messageId":"159","endLine":38,"endColumn":29},{"ruleId":"156","severity":1,"message":"174","line":4,"column":19,"nodeType":"158","messageId":"159","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"175","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":19},{"ruleId":"156","severity":1,"message":"176","line":11,"column":21,"nodeType":"158","messageId":"159","endLine":11,"endColumn":32},{"ruleId":"156","severity":1,"message":"177","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":17},{"ruleId":"156","severity":1,"message":"178","line":19,"column":20,"nodeType":"158","messageId":"159","endLine":19,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":63,"column":27,"nodeType":"171","messageId":"172","endLine":63,"endColumn":29},{"ruleId":"156","severity":1,"message":"179","line":90,"column":11,"nodeType":"158","messageId":"159","endLine":90,"endColumn":21},{"ruleId":"166","severity":1,"message":"180","line":111,"column":5,"nodeType":"181","endLine":111,"endColumn":7,"suggestions":"182"},{"ruleId":"156","severity":1,"message":"183","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"184","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"185","line":19,"column":20,"nodeType":"158","messageId":"159","endLine":19,"endColumn":30},{"ruleId":"166","severity":1,"message":"186","line":44,"column":7,"nodeType":"181","endLine":44,"endColumn":9,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"170","line":31,"column":25,"nodeType":"171","messageId":"172","endLine":31,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":41,"column":23,"nodeType":"171","messageId":"172","endLine":41,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":125,"column":28,"nodeType":"190","messageId":"191","endLine":125,"endColumn":30},{"ruleId":"156","severity":1,"message":"192","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":18},{"ruleId":"156","severity":1,"message":"193","line":11,"column":19,"nodeType":"158","messageId":"159","endLine":11,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":21,"column":29,"nodeType":"171","messageId":"172","endLine":21,"endColumn":31},{"ruleId":"166","severity":1,"message":"194","line":37,"column":9,"nodeType":"181","endLine":37,"endColumn":11,"suggestions":"195"},{"ruleId":"156","severity":1,"message":"196","line":15,"column":12,"nodeType":"158","messageId":"159","endLine":15,"endColumn":19},{"ruleId":"156","severity":1,"message":"197","line":20,"column":14,"nodeType":"158","messageId":"159","endLine":20,"endColumn":22},{"ruleId":"169","severity":1,"message":"170","line":30,"column":21,"nodeType":"171","messageId":"172","endLine":30,"endColumn":23},{"ruleId":"166","severity":1,"message":"198","line":51,"column":3,"nodeType":"181","endLine":51,"endColumn":5,"suggestions":"199"},{"ruleId":"156","severity":1,"message":"200","line":82,"column":16,"nodeType":"158","messageId":"159","endLine":82,"endColumn":29},{"ruleId":"156","severity":1,"message":"201","line":13,"column":10,"nodeType":"158","messageId":"159","endLine":13,"endColumn":16},{"ruleId":"156","severity":1,"message":"202","line":15,"column":9,"nodeType":"158","messageId":"159","endLine":15,"endColumn":17},{"ruleId":"156","severity":1,"message":"203","line":20,"column":9,"nodeType":"158","messageId":"159","endLine":20,"endColumn":15},{"ruleId":"156","severity":1,"message":"204","line":50,"column":11,"nodeType":"158","messageId":"159","endLine":50,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":55,"column":17,"nodeType":"168","endLine":69,"endColumn":9},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'printers' is assigned a value but never used.","'printerName' is assigned a value but never used.","'SetPrinterName' is assigned a value but never used.","'printerTemp' is assigned a value but never used.","'setPrinterTemp' is assigned a value but never used.","'LoadPrinterMaker' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'result' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'value' is assigned a value but never used.","'MakerNav' is defined but never used.","'useEffect' is defined but never used.","'setPrinters' is assigned a value but never used.","'HomeNav' is defined but never used.","'SetNozzles' is assigned a value but never used.","'checkError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'OneVal'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'getPrinters' is defined but never used.","'Navigate' is defined but never used.","'DataChange' is defined but never used.","React Hook useEffect has missing dependencies: 'LoadPrinterMaker', 'NamePrinter', and 'id'. Either include them or remove the dependency array.",["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'OnBoarding' is defined but never used.","'setPrinter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["209"],"'Setname' is assigned a value but never used.","'SetColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Material', 'id', 'name', and 'web3.utils'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'SetMaterial' needs the current value of 'name'.",["210"],"'checkMaterial' is defined but never used.","'action' is assigned a value but never used.","'material' is assigned a value but never used.","'colors' is assigned a value but never used.","'stringa' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [OneVal]",{"range":"219","text":"220"},"Update the dependencies array to be: [LoadPrinterMaker, NamePrinter, id]",{"range":"221","text":"222"},"Update the dependencies array to be: [id]",{"range":"223","text":"224"},"Update the dependencies array to be: [Material, id, name, web3.utils]",{"range":"225","text":"226"},[3492,3494],"[OneVal]",[1295,1297],"[LoadPrinterMaker, NamePrinter, id]",[1153,1155],"[id]",[1275,1277],"[Material, id, name, web3.utils]"]