{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Desktop\\\\tirocinio\\\\prova\\\\frontEnd\\\\src\\\\Pages\\\\Myprinters\\\\MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './Myprinters.css';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  const [printers, setPrinters] = useState([]);\n  const navigate = useNavigate();\n  const [printerName, SetPrinterName] = useState();\n  const [printerTemp, setPrinterTemp] = useState();\n  const [PrintersList, SetPrintersList] = useState([]);\n\n  async function LoadPrinterMaker() {\n    const onboarding = new OnBoarding();\n    var printer = await onboarding.getPrinter();\n    setPrinters(printer);\n    return printer[0];\n  }\n\n  useEffect(() => {\n    console.log(LoadPrinterMaker());\n  }, []);\n  let result = \"ciao\";\n  useEffect(() => {\n    async function getPrinters() {\n      const onboarding = new OnBoarding();\n      var printer = await onboarding.getPrinters();\n      console.log(\"ciao\");\n      printer.forEach((value, key) => {\n        result = /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => navigate(`/myprinters/Modify/${key}`),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.name\n          }, value.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.volume\n          }, value.volume + \"volume\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value.maxPrintTemperature\n          }, value.maxPrintTemperature + \"temp\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this);\n        {\n          console.log(value.name);\n        }\n      });\n      /*const PrintersList = printer.map(printer=>{\r\n          <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n      })*/\n\n      SetPrintersList(result);\n    }\n\n    getPrinters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"NozzlesMounted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Soluble\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), PrintersList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPrinters, \"0Hv6HQmqSQN5a2O35rGt683uCzY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/tirocinio/prova/frontEnd/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","useNavigate","useParams","useEffect","useState","OnBoarding","MyPrinters","printers","setPrinters","navigate","printerName","SetPrinterName","printerTemp","setPrinterTemp","PrintersList","SetPrintersList","LoadPrinterMaker","onboarding","printer","getPrinter","console","log","result","getPrinters","forEach","value","key","name","volume","maxPrintTemperature"],"mappings":"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","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\r\nimport './Myprinters.css'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\r\n\r\nexport default function MyPrinters(){\r\n\r\n    const [printers,setPrinters] = useState([])\r\n    const navigate=useNavigate();\r\n    const[printerName,SetPrinterName] = useState();\r\n    const[printerTemp,setPrinterTemp] = useState();  \r\n    const [PrintersList,SetPrintersList] = useState([]); \r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter();\r\n        setPrinters(printer)\r\n        return printer[0];\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(LoadPrinterMaker())\r\n    },[])\r\n\r\n\r\n    let result = \"ciao\";\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getPrinters(){\r\n            const onboarding = new OnBoarding();\r\n            var printer = await onboarding.getPrinters();\r\n            console.log(\"ciao\")\r\n            printer.forEach((value,key)=>{\r\n                result =\r\n                <tr key={key} onClick={()=>navigate(`/myprinters/Modify/${key}`)}>\r\n                            <td key={value.name} >{value.name}</td>\r\n                            <td key={value.volume+\"volume\"}>{value.volume}</td>\r\n                            <td key={value.maxPrintTemperature+ \"temp\"}>{value.maxPrintTemperature}</td>\r\n                </tr>\r\n                {console.log(value.name)}\r\n            })\r\n            /*const PrintersList = printer.map(printer=>{\r\n                <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n           })*/\r\n           SetPrintersList(result);\r\n        }\r\n        getPrinters();\r\n        },[])\r\n\r\n    return(\r\n        <div>\r\n             <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>My printers</h1>\r\n            \r\n            <table className=\"myPrinters\">\r\n                \r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>NozzlesMounted</th>\r\n                    <th>Soluble</th>\r\n                </tr>     \r\n            {PrintersList}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}