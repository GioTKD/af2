{"ast":null,"code":"import Web3Istance from \"../Web3\";\nimport VotingSystemABI from '../../ABIs/VotingSystem.json';\nimport { useEffect } from \"react\";\nexport default class VotingSystem extends Web3Istance {\n  constructor() {\n    super();\n    let ABIScheduling = VotingSystemABI.abi;\n    let ContractNetworks = VotingSystemABI.networks;\n    let contractAddress = ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n  }\n\n  async announce(filehash, timestamp, commitment, taur, taup) {\n    let account = await this.checkIfWalletIsConnected();\n    let result = await this.contract.methods.announce(this.utils.fromAscii(filehash), 2, 4, 4, 2).send({\n      from: account,\n      gas: 4600000\n    });\n    console.log(result);\n  }\n\n  async getDesigns() {\n    let account = await this.checkIfWalletIsConnected();\n    let result = this.contract.methods.getDesigns().call({\n      from: account\n    });\n    console.log(result);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/Desk/tirocinio/prova/frontEnd/src/SmartContracts/VotingSystem/VotingSystem.js"],"names":["Web3Istance","VotingSystemABI","useEffect","VotingSystem","constructor","ABIScheduling","abi","ContractNetworks","networks","contractAddress","Object","keys","length","address","announce","filehash","timestamp","commitment","taur","taup","account","checkIfWalletIsConnected","result","contract","methods","utils","fromAscii","send","from","gas","console","log","getDesigns","call"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,YAAN,SAA2BH,WAA3B,CAAsC;AACjDI,EAAAA,WAAW,GAAE;AACT;AACA,QAAIC,aAAa,GAAGJ,eAAe,CAACK,GAApC;AACA,QAAIC,gBAAgB,GAAGN,eAAe,CAACO,QAAvC;AACA,QAAIC,eAAe,GAAGF,gBAAgB,CAACG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BK,MAA9B,GAAqC,CAAnE,CAAD,CAAhB,CAAwFC,OAA9G;AACH;;AAEa,QAARC,QAAQ,CAACC,QAAD,EAAWC,SAAX,EAAqBC,UAArB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA4C;AACtD,QAAIC,OAAO,GAAC,MAAM,KAAKC,wBAAL,EAAlB;AACA,QAAIC,MAAM,GAAG,MAAM,KAAKC,QAAL,CAAcC,OAAd,CAAsBV,QAAtB,CACf,KAAKW,KAAL,CAAWC,SAAX,CAAqBX,QAArB,CADe,EAEf,CAFe,EAGf,CAHe,EAIf,CAJe,EAKf,CALe,EAKZY,IALY,CAKP;AAACC,MAAAA,IAAI,EAACR,OAAN;AAAcS,MAAAA,GAAG,EAAC;AAAlB,KALO,CAAnB;AAMIC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACP;;AAEe,QAAVU,UAAU,GAAE;AACd,QAAIZ,OAAO,GAAG,MAAM,KAAKC,wBAAL,EAApB;AACA,QAAIC,MAAM,GAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBQ,UAAtB,GAAmCC,IAAnC,CAAwC;AAACL,MAAAA,IAAI,EAACR;AAAN,KAAxC,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACH;;AAvBgD","sourcesContent":["import Web3Istance from \"../Web3\";\r\nimport VotingSystemABI from '../../ABIs/VotingSystem.json'\r\nimport { useEffect } from \"react\";\r\n\r\nexport default class VotingSystem extends Web3Istance{\r\n    constructor(){\r\n        super();\r\n        let ABIScheduling = VotingSystemABI.abi;\r\n        let ContractNetworks = VotingSystemABI.networks;\r\n        let contractAddress = ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length-1]].address;\r\n    }\r\n\r\n    async announce(filehash, timestamp,commitment, taur, taup){\r\n        let account=await this.checkIfWalletIsConnected();\r\n        let result = await this.contract.methods.announce(\r\n            this.utils.fromAscii(filehash),\r\n            2,\r\n            4,\r\n            4,\r\n            2).send({from:account,gas:4600000})\r\n            console.log(result)\r\n    }\r\n\r\n    async getDesigns(){\r\n        let account = await this.checkIfWalletIsConnected();\r\n        let result = this.contract.methods.getDesigns().call({from:account});\r\n        console.log(result)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}