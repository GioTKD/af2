{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Desktop\\\\tirocinio\\\\prova\\\\frontEnd\\\\src\\\\Pages\\\\Myprinters\\\\MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './Myprinters.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  const [printers, setPrinters] = useState([]);\n  const navigate = useNavigate();\n  const [printerName, SetPrinterName] = useState();\n  const [printerTemp, setPrinterTemp] = useState();\n  const [PrintersList, SetPrintersList] = useState([]);\n\n  const goModifyPrinters = () => {\n    navigate(\"/ModifyPrinters\");\n  };\n\n  async function getPrinters() {\n    const onboarding = new OnBoarding();\n    var printer = await onboarding.getPrinters();\n    console.log(printer);\n    let format = printer.map((value, key) => {\n      SetPrintersList(prev => [...prev, /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.name\n        }, value.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.volume\n        }, value.volume, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.maxPrintTemperature\n        }, value.maxPrintTemperature, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]);\n    });\n    /*const PrintersList = printer.map(printer=>{\r\n        <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n    })*/\n\n    return printer;\n  }\n\n  useEffect(() => {\n    getPrinters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), PrintersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPrinters, \"DaQosIYUuf4uoCidp/NhxJ5WPc8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/tirocinio/prova/frontEnd/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","useNavigate","useEffect","useState","OnBoarding","MyPrinters","printers","setPrinters","navigate","printerName","SetPrinterName","printerTemp","setPrinterTemp","PrintersList","SetPrintersList","goModifyPrinters","getPrinters","onboarding","printer","console","log","format","map","value","key","prev","name","volume","maxPrintTemperature"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBJ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMK,QAAQ,GAACP,WAAW,EAA1B;AACA,QAAK,CAACQ,WAAD,EAAaC,cAAb,IAA+BP,QAAQ,EAA5C;AACA,QAAK,CAACQ,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,EAA5C;AACA,QAAM,CAACU,YAAD,EAAcC,eAAd,IAAiCX,QAAQ,CAAC,EAAD,CAA/C;;AAEA,QAAMY,gBAAgB,GAAE,MAAK;AACzBP,IAAAA,QAAQ,CAAC,iBAAD,CAAR;AACH,GAFD;;AAII,iBAAeQ,WAAf,GAA4B;AAC5B,UAAMC,UAAU,GAAG,IAAIb,UAAJ,EAAnB;AACA,QAAIc,OAAO,GAAG,MAAMD,UAAU,CAACD,WAAX,EAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIG,MAAM,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,KAAD,EAAOC,GAAP,KAAa;AAClCV,MAAAA,eAAe,CAAGW,IAAD,IAAQ,CAAC,GAAGA,IAAJ,eACzB;AAAA,gCACY;AAAA,oBAAsBF,KAAK,CAACG;AAA5B,WAASH,KAAK,CAACG,IAAf;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEY;AAAA,oBAAwBH,KAAK,CAACI;AAA9B,WAASJ,KAAK,CAACI,MAAf;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAGY;AAAA,oBAAqCJ,KAAK,CAACK;AAA3C,WAASL,KAAK,CAACK,mBAAf;AAAA;AAAA;AAAA;AAAA,gBAHZ;AAAA,SAASJ,GAAT;AAAA;AAAA;AAAA;AAAA,cADyB,CAAV,CAAf;AAMF,KAPW,CAAb;AAQA;AACR;AACA;;AACO,WAAON,OAAP;AACF;;AAEDhB,EAAAA,SAAS,CAAC,MAAI;AACbc,IAAAA,WAAW;AACP,GAFI,EAEH,EAFG,CAAT;AAIA,sBACI;AAAA,4BACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECH,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5CuBR,U;UAGLJ,W;;;KAHKI,U","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\r\nimport './Myprinters.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\r\n\r\nexport default function MyPrinters(){\r\n\r\n    const [printers,setPrinters] = useState([])\r\n    const navigate=useNavigate();\r\n    const[printerName,SetPrinterName] = useState();\r\n    const[printerTemp,setPrinterTemp] = useState();  \r\n    const [PrintersList,SetPrintersList] = useState([]); \r\n\r\n    const goModifyPrinters= () =>{\r\n        navigate(\"/ModifyPrinters\")\r\n    }\r\n\r\n        async function getPrinters(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinters();\r\n        console.log(printer)\r\n        let format = printer.map((value,key)=>{\r\n            SetPrintersList( (prev)=>[...prev, \r\n            <tr key={key}>\r\n                        <td key={value.name}>{value.name}</td>\r\n                        <td key={value.volume}>{value.volume}</td>\r\n                        <td key={value.maxPrintTemperature}>{value.maxPrintTemperature}</td>\r\n            </tr>]\r\n        )})\r\n        /*const PrintersList = printer.map(printer=>{\r\n            <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n       })*/\r\n       return printer;\r\n    }\r\n\r\n    useEffect(()=>{\r\n     getPrinters();\r\n        },[])\r\n\r\n    return(\r\n        <div>\r\n             <UserNav/>\r\n            <div>\r\n            <h1>My printers</h1>     \r\n            {PrintersList}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}