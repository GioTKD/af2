{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Desktop\\\\Desk\\\\tirocinio\\\\prova\\\\frontEnd\\\\src\\\\Pages\\\\UpdateMaterial\\\\UpdateMaterial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './UpdateMaterial.css';\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\nimport { UserNav } from '../../component/Navbar/homeNav';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport Select from 'react-select';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateMaterial() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [name, Setname] = useState(\"\");\n  const [type, Settype] = useState([0]);\n  const [quantityKG, SetquantityKG] = useState(0);\n  const [printTemp, SetprintTemp] = useState(0);\n  const [bedTemp, SetBedTemp] = useState(0);\n  const [colore, SetColor] = useState([0]);\n  const [check, Setcheck] = useState(true);\n  const [Material, SetMaterial] = useState([]);\n  const web3 = new Web3();\n\n  const handleChange = option => {\n    let values = [];\n    option.map(value => {\n      values.push(parseInt(value.value));\n    });\n    Settype(values);\n  };\n\n  useEffect(() => {\n    //console.log(id)\n    async function getMat() {\n      const onboard = new OnBoarding();\n      const web3 = new Web3();\n      var mate = await onboard.getMaterials();\n      console.log(mate[0].name);\n      console.log(id); //var mats = await onboard.getMaterial(id)\n      //let mats = mate[id]\n      //console.log(mats)\n\n      SetMaterial({\n        name: web3.utils.hexToUtf8(mate[parseInt(id)].name)\n      });\n      SetquantityKG(mate[id].quantityKG);\n      SetprintTemp(mate[id].printTemperature);\n      SetBedTemp(mate[id].bedTemperature);\n      SetColor(mate[id].color);\n    }\n\n    getMat();\n    console.log(Material.color);\n  }, []);\n  const material = [{\n    value: \"0\",\n    label: \"ABS\"\n  }, {\n    value: \"1\",\n    label: \"PLA\"\n  }, {\n    value: \"2\",\n    label: \"PETG\"\n  }];\n  const color = [{\n    value: \"0\",\n    label: \"NONE\"\n  }, {\n    value: \"1\",\n    label: \"BLACK\"\n  }, {\n    value: \"2\",\n    label: \"WHITE\"\n  }, {\n    value: \"3\",\n    label: \"BROWN\"\n  }, {\n    value: \"4\",\n    label: \"GRAY\"\n  }, {\n    value: \"5\",\n    label: \"YELLOW\"\n  }, {\n    value: \"6\",\n    label: \"ORANGE\"\n  }, {\n    value: \"7\",\n    label: \"RED\"\n  }, {\n    value: \"8\",\n    label: \"PINK\"\n  }, {\n    value: \"9\",\n    label: \"PURPLE\"\n  }, {\n    value: \"10\",\n    label: \"BLU\"\n  }, {\n    value: \"11\",\n    label: \"GREEN\"\n  }];\n\n  async function UpdateMats() {\n    const onboarding = new OnBoarding();\n    console.log(name);\n    var mats = await onboarding.updateMaterial(Web3.utils.hexToAscii(Material[0]), type, colore, quantityKG, printTemp, bedTemp);\n    console.log(mats);\n  }\n\n  async function checkMaterial() {\n    const onboarding = new OnBoarding();\n    Setcheck(await onboarding.CheckMaterial(name));\n    console.log(check);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign\",\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UpdateMaterial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SignIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name : \", Material['name']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Material Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          margin: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          options: material,\n          getOptionValue: option => option.value,\n          onChange: option => {\n            handleChange(option);\n            console.log(option);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          margin: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          placeholder: Material.color ? material[Material.color].label : 0,\n          options: color,\n          getOptionValue: option => option.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"QuantityKg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: quantityKG + \" KG\",\n        onChange: event => {\n          SetquantityKG(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PrintTemp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: printTemp + \" °C\",\n        onChange: event => {\n          SetprintTemp(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"bedTemp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: bedTemp + \" °C\",\n        onChange: event => {\n          SetBedTemp(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 121\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next1\",\n        onClick: UpdateMats,\n        children: \"Update Material\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateMaterial, \"Nbc381D2RTFK7xwoJV6AcVoOTFA=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateMaterial;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMaterial\");","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/Desk/tirocinio/prova/frontEnd/src/Pages/UpdateMaterial/UpdateMaterial.js"],"names":["React","useState","OnBoarding","UserNav","useParams","useEffect","Select","Web3","UpdateMaterial","id","name","Setname","type","Settype","quantityKG","SetquantityKG","printTemp","SetprintTemp","bedTemp","SetBedTemp","colore","SetColor","check","Setcheck","Material","SetMaterial","web3","handleChange","option","values","map","value","push","parseInt","getMat","onboard","mate","getMaterials","console","log","utils","hexToUtf8","printTemperature","bedTemperature","color","material","label","UpdateMats","onboarding","mats","updateMaterial","hexToAscii","checkMaterial","CheckMaterial","width","margin","event","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './UpdateMaterial.css'\r\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding'\r\nimport { UserNav } from '../../component/Navbar/homeNav'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport Select from 'react-select';\r\nimport Web3 from 'web3'\r\n\r\n\r\nexport default function UpdateMaterial() {\r\n\r\n  let {id} = useParams()\r\n\r\nconst[name,Setname] = useState(\"\");\r\nconst[type,Settype] = useState([0]);\r\nconst[quantityKG,SetquantityKG] = useState(0);\r\nconst[printTemp,SetprintTemp] = useState(0);\r\nconst[bedTemp,SetBedTemp] = useState(0);\r\nconst[colore,SetColor] = useState([0]);\r\n\r\nconst[check,Setcheck] = useState(true);\r\n\r\nconst [Material,SetMaterial] = useState([]);\r\n\r\nconst web3 = new Web3();\r\n\r\nconst handleChange=(option)=>{\r\n  let values=[]\r\n  option.map((value)=>{\r\n      values.push(parseInt(value.value));\r\n      \r\n  })\r\n  Settype(values);\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  //console.log(id)\r\n  async function getMat(){\r\n  const onboard = new OnBoarding();\r\n  const web3 = new Web3();\r\n  var mate = await onboard.getMaterials();\r\n  console.log(mate[0].name)\r\n  console.log(id)\r\n  //var mats = await onboard.getMaterial(id)\r\n  //let mats = mate[id]\r\n  //console.log(mats)\r\n  SetMaterial({name:web3.utils.hexToUtf8(mate[parseInt(id)].name)})\r\n  SetquantityKG(mate[id].quantityKG)\r\n  SetprintTemp(mate[id].printTemperature)\r\n  SetBedTemp(mate[id].bedTemperature)\r\n  SetColor(mate[id].color)\r\n  }\r\n  getMat();\r\n  console.log(Material.color)\r\n},[])\r\n\r\nconst material=[\r\n  {value:\"0\" , label:\"ABS\"},\r\n  {value:\"1\",label:\"PLA\"},\r\n  {value:\"2\",label:\"PETG\"}]  \r\n  \r\n  const color=[\r\n    {value:\"0\", label:\"NONE\"},\r\n    {value:\"1\", label:\"BLACK\"},\r\n    {value:\"2\", label:\"WHITE\"},\r\n    {value:\"3\", label:\"BROWN\"},\r\n    {value:\"4\",label:\"GRAY\"},\r\n    {value:\"5\", label:\"YELLOW\"},\r\n    {value:\"6\", label:\"ORANGE\"},\r\n    {value:\"7\", label:\"RED\"},\r\n    {value:\"8\", label:\"PINK\"},\r\n    {value:\"9\", label:\"PURPLE\"},\r\n    {value:\"10\", label:\"BLU\"},\r\n    {value:\"11\", label:\"GREEN\"}]\r\n\r\n\r\n\r\nasync function UpdateMats(){\r\n  const onboarding = new OnBoarding();\r\n  console.log(name)\r\n  var mats = await onboarding.updateMaterial(Web3.utils.hexToAscii(Material[0]),type,colore,quantityKG,printTemp,bedTemp);\r\n  console.log(mats)\r\n\r\n}\r\n\r\nasync function checkMaterial(){\r\n  const onboarding = new OnBoarding();\r\n  Setcheck(await onboarding.CheckMaterial(name))\r\n  console.log(check)\r\n}\r\n\r\n\r\n  return (\r\n    <div className='sign'>\r\n        <UserNav/>\r\n        <h1>UpdateMaterial</h1>\r\n        <div className='SignIn'>\r\n\r\n          <p>Name : {Material['name']}</p>\r\n          <p>Material Type</p>\r\n          <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n                   <Select  isMulti \r\n                    options={material}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{handleChange(option);\r\n                    console.log(option);}}/>\r\n                    </div>\r\n          <p>Color</p>\r\n          <div style={{\r\n                    width:\"200px\",\r\n                    margin:\"auto\"}}>\r\n                      <Select isMulti \r\n                      placeholder={Material.color ? (material[Material.color].label) : 0}\r\n                      options={color}\r\n                      getOptionValue={(option)=>option.value}\r\n                      />\r\n\r\n                  </div>\r\n          <p>QuantityKg</p>  \r\n          <input type=\"number\" placeholder={quantityKG+ \" KG\"} onChange={(event)=>{SetquantityKG(event.target.value)}}></input>\r\n          <p>PrintTemp</p>\r\n          <input type=\"number\" placeholder={printTemp+ \" °C\"} onChange={(event)=>{SetprintTemp(event.target.value)}}></input>\r\n          <p>bedTemp</p>\r\n          <input type=\"number\" placeholder={bedTemp+\" °C\"} onChange={(event)=>{SetBedTemp(event.target.value)}}></input><br/>\r\n          <button className='next1' onClick={(UpdateMats)}>Update Material</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}