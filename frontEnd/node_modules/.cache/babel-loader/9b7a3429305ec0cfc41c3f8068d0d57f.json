{"ast":null,"code":"import Web3Istance from \"../Web3\";\nimport VotingSystemABI from '../../ABIs/VotingSystem.json';\nexport default class VotingSystem extends Web3Istance {\n  constructor() {\n    super();\n    let ABIScheduling = VotingSystemABI.abi;\n    let ContractNetworks = VotingSystemABI.networks;\n    let contractAddress = ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n    this.contract = new this.web3.eth.Contract(ABIScheduling, contractAddress);\n  }\n\n  async announce(filehash, timestamp, taur, taup) {\n    let account = await this.checkIfWalletIsConnected();\n    await this.contract.methods.announce(\"189bbbb00c5f1fb7fba9ad9285f193d1\", 2, 0, 0).send({\n      from: account,\n      gas: 4600000\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/Desk/tirocinio/prova/frontEnd/src/SmartContracts/VotingSystem/VotingSystem.js"],"names":["Web3Istance","VotingSystemABI","VotingSystem","constructor","ABIScheduling","abi","ContractNetworks","networks","contractAddress","Object","keys","length","address","contract","web3","eth","Contract","announce","filehash","timestamp","taur","taup","account","checkIfWalletIsConnected","methods","send","from","gas"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,eAAe,MAAMC,YAAN,SAA2BF,WAA3B,CAAsC;AACjDG,EAAAA,WAAW,GAAE;AACT;AACA,QAAIC,aAAa,GAAGH,eAAe,CAACI,GAApC;AACA,QAAIC,gBAAgB,GAAGL,eAAe,CAACM,QAAvC;AACA,QAAIC,eAAe,GAACF,gBAAgB,CAACG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BK,MAA9B,GAAuC,CAArE,CAAD,CAAhB,CAA0FC,OAA9G;AACA,SAAKC,QAAL,GAAc,IAAI,KAAKC,IAAL,CAAUC,GAAV,CAAcC,QAAlB,CAA2BZ,aAA3B,EAAyCI,eAAzC,CAAd;AAEH;;AAEa,QAARS,QAAQ,CAACC,QAAD,EAAWC,SAAX,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAiC;AAC3C,QAAIC,OAAO,GAAC,MAAM,KAAKC,wBAAL,EAAlB;AACA,UAAM,KAAKV,QAAL,CAAcW,OAAd,CAAsBP,QAAtB,CACF,kCADE,EAEF,CAFE,EAGF,CAHE,EAIF,CAJE,EAICQ,IAJD,CAIM;AAACC,MAAAA,IAAI,EAACJ,OAAN;AAAcK,MAAAA,GAAG,EAAC;AAAlB,KAJN,CAAN;AAKH;;AAjBgD","sourcesContent":["import Web3Istance from \"../Web3\";\r\nimport VotingSystemABI from '../../ABIs/VotingSystem.json'\r\n\r\nexport default class VotingSystem extends Web3Istance{\r\n    constructor(){\r\n        super();\r\n        let ABIScheduling = VotingSystemABI.abi;\r\n        let ContractNetworks = VotingSystemABI.networks;\r\n        let contractAddress=ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\r\n        this.contract=new this.web3.eth.Contract(ABIScheduling,contractAddress);\r\n\r\n    }\r\n\r\n    async announce(filehash, timestamp, taur, taup){\r\n        let account=await this.checkIfWalletIsConnected();\r\n        await this.contract.methods.announce(\r\n            \"189bbbb00c5f1fb7fba9ad9285f193d1\",\r\n            2,\r\n            0,\r\n            0).send({from:account,gas:4600000})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}