{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Desktop\\\\Desk\\\\tirocinio\\\\prova\\\\frontEnd\\\\src\\\\Pages\\\\Myprinters\\\\ModifyPrinters\\\\Modify.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../../component/Navbar/homeNav\";\nimport { getPrinters } from \"../../../data/data\";\nimport '../Myprinters.css';\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\nimport Select from 'react-select';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modify() {\n  _s();\n\n  const [NamePrinter, SetNamePrinter] = useState(\"\");\n  const [Nozzles, SetNozzles] = useState(0);\n  const [Soluble, SetSoluble] = useState(0);\n  const [foods, Setfood] = useState(0);\n  const navigate = useNavigate();\n  const [materials, SetMaterials] = useState([{}]);\n  const [SelectMats, SetSelectMats] = useState([{}]);\n  const [print, Setprint] = useState({});\n  let {\n    id\n  } = useParams();\n  console.log(id);\n  const [materia, Setmateria] = useState({});\n  let web3 = new Web3();\n  const material = [{\n    value: \"0\",\n    label: \"ABS\"\n  }, {\n    value: \"1\",\n    label: \"PLA\"\n  }, {\n    value: \"2\",\n    label: \"PETG\"\n  }];\n  const food = [{\n    value: \"0\",\n    label: \"Si\"\n  }, {\n    value: \"1\",\n    label: \"No\"\n  }];\n  const solub = [{\n    value: \"0\",\n    label: \"Si\"\n  }, {\n    value: \"1\",\n    label: \"No\"\n  }];\n\n  async function getMat(name, Type) {\n    const onboarding = new OnBoarding(); // var mat = await onboarding.getMaterial(name,type)\n  }\n\n  async function LoadPrinterMaker() {\n    const onboarding = new OnBoarding();\n    var printer = await onboarding.getPrinter(id);\n    SetNozzles(printer.mountedNozzles);\n    SetSoluble(printer.soluble === false ? 0 : 1);\n    Setfood(printer.foodSafety);\n    console.log(printer);\n    console.log(printer.soluble === false ? \"0\" : \"1\");\n    return printer;\n  }\n\n  async function ModifyPrinter() {\n    const onBoarding = new OnBoarding();\n    let newObj = {\n      type: materials.SelectMats,\n      soluble: Soluble,\n      foodSafety: foods\n    };\n    console.log(newObj);\n    console.log(newObj.SelectMats);\n    var printer = await onBoarding.ModifyPrinter(id, newObj);\n    return printer;\n  }\n\n  async function getMaterials() {\n    const onboard = new OnBoarding();\n    var materials = await onboard.getMaterials();\n    materials.forEach((val, index) => {\n      SetMaterials([...materials, {\n        name: val.name,\n        type: val.mType,\n        color: val.color,\n        quantityKG: val.quantityKG,\n        printTemp: val.printTemperature,\n        bedTemp: val.bedTemperature\n      }]);\n      SetSelectMats([...SelectMats, {\n        value: index.toString(),\n        label: web3.utils.hexToUtf8(val.name)\n      }]);\n    });\n  }\n\n  useEffect(() => {\n    LoadPrinterMaker();\n    console.log(id);\n    console.log(NamePrinter);\n    console.log(parseInt(false));\n    getMaterials();\n  }, []);\n  /*const handleChange = (option,type)=>{\r\n      let values=[]\r\n      switch(type){\r\n          case \"food\" : \r\n      }\r\n      option.map((value)=>{\r\n          values.push(parseInt(value.value));\r\n          \r\n      })\r\n      SetMateriale(values);\r\n      if(values.length===0)\r\n          printerData['material']=undefined;\r\n      console.log(printerData['material']);\r\n      \r\n    }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Modify Printer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignIn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"NozzlesMounted :\", Nozzles]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"nozzles\",\n              onChange: event => SetNozzles(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Materiale solubile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"200px\",\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: solub,\n              placeholder: Soluble ? solub[Soluble].label : \"No\",\n              getOptionValue: option => option.value,\n              onChange: option => {\n                Setmateria({ ...materia,\n                  \"soluble\": option.value\n                });\n                console.log(option);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Food Safety\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"200px\",\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: food,\n              placeholder: foods ? food[foods].label : \"No\",\n              getOptionValue: option => option.value,\n              onChange: option => {\n                Setmateria({ ...materia,\n                  \"FoodSafety\": option.value\n                });\n                console.log(option);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Mount Material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\",\n            margin: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            options: SelectMats,\n            getOptionValue: option => option.value,\n            onChange: option => {\n              ;\n              console.log(option);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"printerButton\",\n          onClick: ModifyPrinter,\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Modify, \"uREn8hj7/KqrMsHYCM2pogyAf/4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/Desk/tirocinio/prova/frontEnd/src/Pages/Myprinters/ModifyPrinters/Modify.js"],"names":["UserNav","getPrinters","Navigate","useNavigate","useParams","useEffect","useState","OnBoarding","Select","Web3","Modify","NamePrinter","SetNamePrinter","Nozzles","SetNozzles","Soluble","SetSoluble","foods","Setfood","navigate","materials","SetMaterials","SelectMats","SetSelectMats","print","Setprint","id","console","log","materia","Setmateria","web3","material","value","label","food","solub","getMat","name","Type","onboarding","LoadPrinterMaker","printer","getPrinter","mountedNozzles","soluble","foodSafety","ModifyPrinter","onBoarding","newObj","type","getMaterials","onboard","forEach","val","index","mType","color","quantityKG","printTemp","printTemperature","bedTemp","bedTemperature","toString","utils","hexToUtf8","parseInt","event","target","width","margin","option"],"mappings":"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","sourcesContent":["import { UserNav } from \"../../../component/Navbar/homeNav\"\r\nimport { getPrinters } from \"../../../data/data\";\r\nimport '../Myprinters.css'\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../../SmartContracts/OnBoarding/OnBoarding\";\r\nimport Select from 'react-select';\r\nimport Web3 from \"web3\";\r\n\r\nexport default function Modify(){\r\n\r\n    const [NamePrinter,SetNamePrinter] = useState(\"\");\r\n    const [Nozzles,SetNozzles] = useState(0);\r\n    const [Soluble,SetSoluble] = useState(0);\r\n    const [foods,Setfood] = useState(0)\r\n    const navigate=useNavigate();\r\n    const [materials,SetMaterials] = useState([{}]);\r\n    const[SelectMats,SetSelectMats] = useState([{}]);\r\n    const [ print,Setprint] = useState({});\r\n    let {id}  = useParams(); \r\n    console.log(id)\r\n\r\n    const[materia,Setmateria] = useState({});\r\n    let web3 = new Web3();\r\n\r\n    const material=[\r\n        {value:\"0\" , label:\"ABS\"},\r\n        {value:\"1\",label:\"PLA\"},\r\n        {value:\"2\",label:\"PETG\"}]\r\n\r\n    const food = [\r\n        {value:\"0\", label:\"Si\"},\r\n        {value:\"1\",label:\"No\"}]\r\n\r\n    const solub = [\r\n        {value:\"0\", label:\"Si\"},\r\n        {value:\"1\",label:\"No\"}]\r\n\r\n\r\n    async function getMat(name,Type){\r\n        const onboarding = new OnBoarding();\r\n       // var mat = await onboarding.getMaterial(name,type)\r\n    }\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter(id);\r\n        SetNozzles(printer.mountedNozzles)\r\n        SetSoluble(printer.soluble === false ? 0 : 1)\r\n        Setfood(printer.foodSafety)\r\n       console.log(printer)    \r\n       console.log(printer.soluble===false?\"0\":\"1\")\r\n    return printer;\r\n    }\r\n\r\n    async function ModifyPrinter(){\r\n        const onBoarding = new OnBoarding();\r\n        let newObj = {type: materials.SelectMats, soluble: Soluble, foodSafety: foods}\r\n        console.log(newObj)\r\n        console.log(newObj.SelectMats)\r\n        var printer = await onBoarding.ModifyPrinter(\r\n            id,\r\n            newObj\r\n        )\r\n        return printer;\r\n    }\r\n\r\n    async function getMaterials(){\r\n        const onboard = new OnBoarding();\r\n        var materials = await onboard.getMaterials();\r\n        materials.forEach((val,index) => {\r\n            SetMaterials(\r\n                [...materials,{name: val.name, type: val.mType,color: val.color,quantityKG: val.quantityKG, printTemp: val.printTemperature, bedTemp: val.bedTemperature}]\r\n            )\r\n            SetSelectMats(\r\n                [...SelectMats,{value: index.toString(),label : web3.utils.hexToUtf8(val.name) }]\r\n            )\r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        LoadPrinterMaker();\r\n        console.log(id)\r\n        console.log(NamePrinter)\r\n        console.log(parseInt(false))\r\n        getMaterials();\r\n    },[])\r\n\r\n\r\n    /*const handleChange = (option,type)=>{\r\n        let values=[]\r\n        switch(type){\r\n            case \"food\" : \r\n        }\r\n        option.map((value)=>{\r\n            values.push(parseInt(value.value));\r\n            \r\n        })\r\n        SetMateriale(values);\r\n        if(values.length===0)\r\n            printerData['material']=undefined;\r\n        console.log(printerData['material']);\r\n        \r\n\r\n    }*/\r\n\r\n    return(\r\n        <div>\r\n            <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>Modify Printer</h1>\r\n            <div className=\"SignIn\">\r\n                \r\n\r\n        <label>\r\n        <p>NozzlesMounted :{Nozzles}</p>\r\n        <p><input type=\"number\" placeholder=\"nozzles\"onChange={(event)=> SetNozzles(event.target.value)}/></p>\r\n        </label>\r\n\r\n        <label>\r\n        <p>Materiale solubile</p>\r\n        \r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select \r\n                    options={solub}\r\n                    placeholder={Soluble ? (solub[Soluble].label) : \"No\"}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{(Setmateria({...materia,\"soluble\": option.value}));\r\n                    console.log(option);}}/>\r\n                    </div>\r\n        </label>\r\n\r\n        <label>\r\n        <p>Food Safety</p>\r\n        \r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select  \r\n                    options={food}\r\n                    placeholder={foods ? (food[foods].label) : \"No\"}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{(Setmateria({...materia,\"FoodSafety\": option.value}));\r\n                    console.log(option);}}/>\r\n                    </div>\r\n        </label>\r\n\r\n        <label>\r\n            <p> Mount Material</p>\r\n        </label>\r\n        <div style={{\r\n                        width:\"200px\",\r\n                        margin:\"auto\"}}>\r\n        <Select  \r\n                    options={SelectMats}\r\n                    getOptionValue={(option)=>option.value}\r\n                    onChange={(option)=>{;\r\n                    console.log(option);}}/>\r\n                    </div>\r\n\r\n        <button className=\"printerButton\" onClick={ModifyPrinter}>Modify</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}