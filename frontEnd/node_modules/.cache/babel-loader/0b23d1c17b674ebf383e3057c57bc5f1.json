{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Desktop\\\\tirocinio\\\\prova\\\\frontEnd\\\\src\\\\Pages\\\\Myprinters\\\\MyPrinters.js\",\n    _s = $RefreshSig$();\n\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './Myprinters.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPrinters() {\n  _s();\n\n  const [printers, setPrinters] = useState([]);\n  const navigate = useNavigate();\n  const [printerName, SetPrinterName] = useState();\n  const [printerTemp, setPrinterTemp] = useState();\n  const [PrintersList, SetPrintersList] = useState([]);\n  const [TakeId, SetTakeId] = useState(\"\");\n  const {\n    id\n  } = LoadPrinterMaker();\n\n  async function handle(event) {\n    event.prevent.default();\n    SetTakeId(printer.name);\n  }\n\n  const goModifyPrinters = () => {\n    navigate(\"/ModifyPrinters\");\n  };\n\n  async function LoadPrinterMaker() {\n    const onboarding = new OnBoarding();\n    var printer = await onboarding.getPrinter();\n    return printer[0];\n  }\n\n  let result = \"\";\n\n  async function getPrinters() {\n    const onboarding = new OnBoarding();\n    var printer = await onboarding.getPrinters();\n    console.log(\"ciao\");\n    printer.forEach((value, key) => {\n      result = /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => navigate(\"/Modify/:id\", {\n          id\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.name\n        }, value.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.volume\n        }, value.volume + \"volume\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.maxPrintTemperature\n        }, value.maxPrintTemperature + \"temp\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n      {\n        console.log(value.name);\n      }\n    });\n    /*const PrintersList = printer.map(printer=>{\r\n        <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n    })*/\n\n    SetPrintersList(result);\n    await onboarding.getPrinter();\n  }\n\n  useEffect(() => {\n    getPrinters();\n    LoadPrinterMaker();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printerTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My printers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"myPrinters\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"NozzlesMounted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Soluble\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), PrintersList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPrinters, \"Q+NoLRd98gbhJiRA3OSpthqYxi8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyPrinters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPrinters\");","map":{"version":3,"sources":["C:/Users/giova/OneDrive/Desktop/tirocinio/prova/frontEnd/src/Pages/Myprinters/MyPrinters.js"],"names":["UserNav","useNavigate","useEffect","useState","OnBoarding","MyPrinters","printers","setPrinters","navigate","printerName","SetPrinterName","printerTemp","setPrinterTemp","PrintersList","SetPrintersList","TakeId","SetTakeId","id","LoadPrinterMaker","handle","event","prevent","default","printer","name","goModifyPrinters","onboarding","getPrinter","result","getPrinters","console","log","forEach","value","key","volume","maxPrintTemperature"],"mappings":"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","sourcesContent":["import { UserNav } from \"../../component/Navbar/homeNav\"\r\nimport './Myprinters.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\nimport OnBoarding from \"../../SmartContracts/OnBoarding/OnBoarding\";\r\n\r\nexport default function MyPrinters(){\r\n\r\n    const [printers,setPrinters] = useState([])\r\n    const navigate=useNavigate();\r\n    const[printerName,SetPrinterName] = useState();\r\n    const[printerTemp,setPrinterTemp] = useState();  \r\n    const [PrintersList,SetPrintersList] = useState([]); \r\n    const [TakeId,SetTakeId] = useState(\"\")\r\n    const { id } = LoadPrinterMaker();\r\n\r\n    async function handle(event){\r\n        event.prevent.default();\r\n        SetTakeId(printer.name)\r\n    }\r\n\r\n    const goModifyPrinters= () =>{\r\n        navigate(\"/ModifyPrinters\")\r\n    }\r\n\r\n    async function LoadPrinterMaker(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinter();\r\n        return printer[0];\r\n    }\r\n\r\n    let result = \"\";\r\n\r\n        async function getPrinters(){\r\n        const onboarding = new OnBoarding();\r\n        var printer = await onboarding.getPrinters();\r\n        console.log(\"ciao\")\r\n        printer.forEach((value,key)=>{\r\n            result =\r\n            <tr key={key} onClick={()=>navigate(\"/Modify/:id\",{ id })}>\r\n                        <td key={value.name}>{value.name}</td>\r\n                        <td key={value.volume+\"volume\"}>{value.volume}</td>\r\n                        <td key={value.maxPrintTemperature+ \"temp\"}>{value.maxPrintTemperature}</td>\r\n            </tr>\r\n            {console.log(value.name)}\r\n        })\r\n        /*const PrintersList = printer.map(printer=>{\r\n            <p><h3>PRINTER</h3><br />Nome: <br />{printer.name}<br />Address : {printer.printerAddress}<br /> Materiali supportati: {printer.supportedMaterial}<br />nozzles : {printer.nozzles}<br />nozzlesMounted : {printer.mountedNozzles}<br />printTemperature : {printer.maxPrintTemperature}<br />maxBedTemperature: {printer.maxBedTemperature}<br />nozzles : {printer.nozzles}<br />Soluble :{printer.soluble}<br />Supported Material: {printer.supportedMaterial}<br />Volume : {printer.volume}</p>\r\n       })*/\r\n       SetPrintersList(result);\r\n       await onboarding.getPrinter();\r\n    }\r\n\r\n    useEffect(()=>{\r\n     getPrinters();\r\n     LoadPrinterMaker();\r\n        },[])\r\n\r\n    return(\r\n        <div>\r\n             <UserNav/>\r\n            <div className=\"printerTable\">\r\n            <h1>My printers</h1>\r\n            \r\n            <table className=\"myPrinters\">\r\n                \r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>NozzlesMounted</th>\r\n                    <th>Soluble</th>\r\n                </tr>     \r\n            {PrintersList}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}